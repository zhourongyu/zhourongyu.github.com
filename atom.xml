<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  
  <title><![CDATA[某某某某]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://xxxx.ooo//"/>
  <updated>2017-03-17T10:59:09.000Z</updated>
  <id>http://xxxx.ooo//</id>
  
  <author>
    <name><![CDATA[山荣]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[使用 Lombok 遇到的坑]]></title>
    <link href="http://xxxx.ooo/2017/using-lombok/"/>
    <id>http://xxxx.ooo/2017/using-lombok/</id>
    <published>2017-03-16T10:39:03.000Z</published>
    <updated>2017-03-17T10:59:09.000Z</updated>
    <content type="html"><![CDATA[<p>Lombok的主旨是提高开发效率，消除冗长的 JAVA 代码，尤其是 POJO 类型。在开发初期 POJO 经常修改，随之涉及到改动 getter/setter/toString 等一系列方法。虽然现在 IDE 都能自动生成对应代码，但还是需要手动删除重新生成。</p>
<p>它的原理是在编译期操作 AST(抽象语法树) 去改变字节码，根据注解生成对应的代码。因为在静态编译期做的，相对可控，使用也简单。</p>
<blockquote>
<p>Google 开源的 AutoValue 也是用来解决这个问题，功能很全面，还可以定制化。但有一些的问题</p>
<ol>
<li>代码侵入重，所有定义的对象是抽象类，使用都是封装后的 AutoValue_XXX </li>
<li>生成的 POJO 都是 immutable 的，需要频繁操作的类会很麻烦。</li>
</ol>
</blockquote>
<h6 id="在使用_Lombok_期间遇到一个坑">在使用 Lombok 期间遇到一个坑</h6><p>当你的 POJO 中出现单字母驼峰名称时，例如：iType，Lombok生成出来的 getter/setter 方法</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> String iType;</div><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getIType</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> iType;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setIType</span><span class="params">(String iType)</span> </span>&#123;</div><div class="line">    <span class="keyword">this</span>.iType = iType;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>乍一看没啥问题，但是影响很严重，首先 Spring 是不认此方法的，其次也影响到 Jackson 的解析，直接导致无法使用</p>
<p>一般来说，代码规范和 API 规范有所区别，参考之前的文章「<a href="/2016/about-api-design/">浅谈 Api 设计</a>」。从后端输出 Api 时会做一些转换，例如驼峰转小写+下划线格式，这个 Jackson 有对应支持</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">Jackson2ObjectMapperBuilder.propertyNamingStrategy(PropertyNamingStrategy.CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES)</div><div class="line"><span class="comment">//Jackson 也是通过 get 方法来获取属性</span></div><div class="line"><span class="comment">//我们的预期是 </span></div><div class="line">iType -&gt; i_type</div><div class="line"><span class="comment">//而结果是 </span></div><div class="line">IType -&gt; itype</div></pre></td></tr></table></figure>
<p>开始我觉得这是 Lombok 的 bug，随后我下载了 Lombok 的源码来验证</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//HandlerUtil 类统一处理方法名</span></div><div class="line"><span class="comment">//可以看到规则是如果首字母小写，长度大于2并且第二个字母是大写或者是 titlecase 的话，则把首字母变大写。</span></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * <span class="doctag">@param</span> prefix Something like &#123;<span class="doctag">@code</span> get&#125; or &#123;<span class="doctag">@code</span> set&#125; or &#123;<span class="doctag">@code</span> is&#125;.</div><div class="line">     * <span class="doctag">@param</span> suffix Something like &#123;<span class="doctag">@code</span> running&#125;.</div><div class="line">     * <span class="doctag">@return</span> prefix + smartly title-cased suffix. For example, &#123;<span class="doctag">@code</span> setRunning&#125;.</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">buildAccessorName</span><span class="params">(String prefix, String suffix)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (suffix.length() == <span class="number">0</span>) <span class="keyword">return</span> prefix;</div><div class="line">        <span class="keyword">if</span> (prefix.length() == <span class="number">0</span>) <span class="keyword">return</span> suffix;</div><div class="line">        </div><div class="line">        <span class="keyword">char</span> first = suffix.charAt(<span class="number">0</span>);</div><div class="line">        <span class="keyword">if</span> (Character.isLowerCase(first)) &#123;</div><div class="line">            <span class="keyword">boolean</span> useUpperCase = suffix.length() &gt; <span class="number">2</span> &amp;&amp;</div><div class="line">                (Character.isTitleCase(suffix.charAt(<span class="number">1</span>)) || Character.isUpperCase(suffix.charAt(<span class="number">1</span>)));</div><div class="line">            suffix = String.format(<span class="string">"%s%s"</span>,</div><div class="line">                    useUpperCase ? Character.toUpperCase(first) : Character.toTitleCase(first),</div><div class="line">                    suffix.subSequence(<span class="number">1</span>, suffix.length()));</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> String.format(<span class="string">"%s%s"</span>, prefix, suffix);</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>显然这是特意而为之，随后我上官方 issue 中看了下，在15年已经有人提出了这个问题，而官方的答复是 Java Bean 的规范就是如此，且不应该使用首字母小写第二个字符大写的命名规则，Spring 的处理方式是自己发明的，我们不能跟着 Spring 乱搞，如果 Oracle 官方推荐如此或者所有人都是这么处理的话我们才改~</p>
<p><img src="http://7xn47h.com1.z0.glb.clouddn.com/2016/9/x2jea.png" alt=""></p>
<p>虽然我没有仔细的看过 Bean 规范，但如果 Spring 这么大厂都不支持的话会很难推广，在我刚和同事推荐的时候大家都非常激动，一听有这么个坑几乎都放弃了，也许是 xXxx 这种命名非常常见吧，比如 iPhone……</p>
<p>不光 Spring，Jackson，编译器（ IDEA）自动生成的也是如此，只能说 Lombok 性格真是倔。既然如此只好自己修改下源码了…</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//好在改动也非常小， 规则改为：长度大于2，并且第二个字母是大写则不转换大写</span></div><div class="line"><span class="keyword">boolean</span> useUpperCase = suffix.length() &gt; <span class="number">2</span> &amp;&amp; Character.isUpperCase(suffix.charAt(<span class="number">1</span>));</div><div class="line"></div><div class="line">suffix = String.format(<span class="string">"%s%s"</span>, useUpperCase ? first : Character.toTitleCase(first),</div><div class="line">                    suffix.subSequence(<span class="number">1</span>, suffix.length()));</div></pre></td></tr></table></figure>
<p>PS：据官方说从 JAVA 讨论组数据统计，半数多人支持 getxXxx() 的做法。但他们大多数人的选择未必是正确的做法~</p>
<p>啊呸…</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Lombok的主旨是提高开发效率，消除冗长的 JAVA 代码，尤其是 POJO 类型。在开发初期 POJO 经常修改，随之涉及到改动 getter/setter/toString 等一系列方法。虽然现在 IDE 都能自动生成对应代码，但还是需要手动删除重新生成。</p>
<]]>
    </summary>
    
      <category term="java" scheme="http://xxxx.ooo/tags/java/"/>
    
      <category term="lombok" scheme="http://xxxx.ooo/tags/lombok/"/>
    
      <category term="tech" scheme="http://xxxx.ooo/categories/tech/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[北海道滑雪不完全指南]]></title>
    <link href="http://xxxx.ooo/2017/ski-in-hokkaido/"/>
    <id>http://xxxx.ooo/2017/ski-in-hokkaido/</id>
    <published>2017-01-16T12:41:12.000Z</published>
    <updated>2017-03-20T09:06:17.000Z</updated>
    <content type="html"><![CDATA[<p>北海道雪场非常多，二世谷、留寿都、札幌国际等诸多著名雪场，前年公司年会去的时候傻逼的被导游带去玩雪橇错过了留寿都的体验，据同事反馈也是相当的好。后面去了札幌国际玩了一天，体验也还不错。今年首次自带装备去滑雪，前期做了不少功课。</p>
<p><img src="http://7xn47h.com1.z0.glb.clouddn.com/2016/9/k9vtb.png" alt=""></p>
<h5 id="自带板的一些注意事项">自带板的一些注意事项</h5><ul>
<li>装备托运：滑雪板属于超规行李，需要特殊办理托运。事先了解航空公司对运动类大件物件的处理方式，国内航空一般把重量算在了普通行李中，部分国际航空公司有免费的政策</li>
</ul>
<ul>
<li>酒店位置，背板的后果就是无法乘坐计程车， 所以酒店位置非常重要，距车站越近越好，当然价格会高一些。</li>
</ul>
<ul>
<li>酒店往返雪场巴士时刻表</li>
</ul>
<p>这次雪场的选择在 <strong>Kiroro</strong> 和 <strong>二世谷</strong>中犹豫，由于没有订上雪场内的酒店，只能选择住在较近的小樽，这里去 Kiroro 大巴约50分钟。去二世谷要坐 JR 一个多小时。最终选择了较近的 Kiroro</p>
<p>这里必须要推荐下我选择的这家酒店，Dormy Inn Premium Otaru（小樽豪华多米酒店），就在 JR 小樽站对面，下车步行约1min。旁边是大巴站，隔壁是小樽最大的商场。 店内提供洗衣房及公共温泉，重点晚上还有免费拉面吃，哈哈。（偶然发现在札幌狸小路旁边也有一家）</p>
<h5 id="KIRORO滑雪_（8_-_16点）">KIRORO滑雪 （8 - 16点）</h5><p>​    Kiroro雪场巴士有两种，一种免费的巴士到小樽驻港站，一种收费到达JR小樽站，都需要预约，因为座位有限，但基本坐不满。有一天我们只约到一个人，经过沟通也让我们上车了。小樽大巴早上八点十分出发，每日一班，不要迟到，不会等人。</p>
<p>​    <img src="http://7xn47h.com1.z0.glb.clouddn.com/2016/9/idito.png" alt="Kiroro"></p>
<p>​    </p>
<p>​    正逢圣诞节，雪场也搞了一些活动。在日本没有滑雪票的概念， 只有Lift price(缆车费) 和Rental price（租赁费用）。自带装备的话只需购买缆车费，根据年龄和时长价格不一，这次我们买的是3天联票（含夜场），折合人民币850左右，是不是比国内还便宜？</p>
<p><img src="http://7xn47h.com1.z0.glb.clouddn.com/2016/9/owc9d.png" alt=""></p>
<p>会发一张实名卡乘缆车用，印有你的个人信息，遇到问题能迅速找到你的资料，理论上只限本人使用。</p>
<p><img src="http://7xn47h.com1.z0.glb.clouddn.com/2016/9/34g4h.png" alt=""></p>
<p>Kiroro 雪场由两座山头组成，最长的雪道(Asari Dynamic) 4km 左右，覆盖初中高级雪道，也是人最多的雪道，缺点就是中午后雪就不粉了。我更爱的是最右侧的 Asari Course ，人烟稀少，大粉雪。</p>
<p><img src="http://7xn47h.com1.z0.glb.clouddn.com/2016/9/6l5th.png" alt=""></p>
<p>Asari 山顶雪季非常的美，像这样。</p>
<p><img src="http://7xn47h.com1.z0.glb.clouddn.com/2016/9/1j71q.JPG" alt=""></p>
<p>也可以这样</p>
<p><img src="http://7xn47h.com1.z0.glb.clouddn.com/2016/9/bcdpk.png" alt=""></p>
<p>第一天下午四点左右暴风雪就开始来了，山顶雪雾大到戴着雪镜只能看到一片白茫茫，当时在高级道的我吓的不太敢滑，害怕冲到树林里的深雪堆里爬不出来。加上只穿了一件保暖内衣和软壳，感觉异常的冷~ 下山就收包返程了</p>
<p><img src="http://7xn47h.com1.z0.glb.clouddn.com/2016/9/tb8i9.png" alt="Asari Course"></p>
<h5 id="吃饭逛街（18-21点）">吃饭逛街（18-21点）</h5><p>​    在小樽基本没有夜生活。六点多我们去觅食已经很多店关门了，有些出名的店还要预定，真是难死我们了~ 饭后就开启了买买买节奏</p>
<p><img src="http://7xn47h.com1.z0.glb.clouddn.com/2016/9/gpik8.png" alt=""></p>
<h5 id="温泉&amp;拉面（21-23点）">温泉&amp;拉面（21-23点）</h5><p>​    运动一天后泡个温泉简直不能再爽，泡饿了再干它两碗免费拉面（拉面23点截止，千万别泡过头了）温泉图片就不放了….</p>
<p>​     提示：女汤需要凭密码进入哦，密码每天都更换，记得找前台要。</p>
<h5 id="最后遗憾">最后遗憾</h5><p>恰好那几天北海道遭遇大暴雪，缺点就是天气不好，也比较冷，好处是雪真是松软到不行，雪场下午都放弃压雪了，雪道内和野雪一样棉花糖似得脚感，趁最后一天天气晴朗拍了个视频，可惜已经没有棉花糖的雪了~</p>
<iframe frameborder="0" width="100%" height="480" src="https://v.qq.com/iframe/player.html?vid=p0365hdw7p6&tiny=0&auto=0" allowfullscreen></iframe>

<p><strong>PS</strong>：在北海道遇到了几个热心的台湾人，解决了一些沟通问题，买 JR 函馆站的一位台湾姐姐带我们到售票厅中买到了更实惠的往返联程票，在雪场丢失了一台 wifi 设备也是一位台湾 MM 帮我们做了相关的登记（虽然最终也没有找回来）</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>北海道雪场非常多，二世谷、留寿都、札幌国际等诸多著名雪场，前年公司年会去的时候傻逼的被导游带去玩雪橇错过了留寿都的体验，据同事反馈也是相当的好。后面去了札幌国际玩了一天，体验也还不错。今年首次自带装备去滑雪，前期做了不少功课。</p>
<p><img src="http:/]]>
    </summary>
    
      <category term="滑雪" scheme="http://xxxx.ooo/tags/%E6%BB%91%E9%9B%AA/"/>
    
      <category term="北海道" scheme="http://xxxx.ooo/tags/%E5%8C%97%E6%B5%B7%E9%81%93/"/>
    
      <category term="life" scheme="http://xxxx.ooo/categories/life/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[充值信仰]]></title>
    <link href="http://xxxx.ooo/2016/cost-for-faith/"/>
    <id>http://xxxx.ooo/2016/cost-for-faith/</id>
    <published>2016-10-11T14:48:54.000Z</published>
    <updated>2016-10-11T15:23:51.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p><strong>信仰</strong>（英语：Faith）是指對一個人（同樣的對他的能力）、事物、神、宗教的教條或教導、沒有經驗證據的觀點（例如擁有強烈的政治信仰）抱有信心和信任    —wikipedia</p>
</blockquote>
<p>如今「信仰」在网络上也被大家用来形容自己对某件事物的热爱，例如信仰是 Google，必须使用 Google 的全套服务，不论是否好用。手机要用亲儿子Nexus（即将变为 Pixel）。锤子的情怀、Apple 的果粉，都算是一种信仰。</p>
<p>今天收到了「信仰之盾」，其实是 Dota2 内的一款纪念品，每逢大比赛前会推出小本子供玩家购买，本子等级越高可以收获更多的饰品，不乏有一些极其珍惜的物品。当然想要本子等级高可以花更多的钱，今年的<strong>第六届国际邀请赛</strong>（最大的一场比赛，简称 Ti6）出了新的花样，达到 1000 级的玩家可以收获实体冠军盾一枚，这手段无非就是促使玩家买买买。</p>
<p>尽管知道是在「骗钱」，还是跳下了火坑，充值信仰。庆幸的是今年在大家心灰意冷的时候，一匹中国黑马拿到了久违的冠军，拿到史上最高奖励 $912w 约 6000 多万人民币，也算自己出了一份力。</p>
<p><img src="http://7xn47h.com1.z0.glb.clouddn.com/2016/9/8d5vm.png" alt="Wings"></p>
<p>实物上手图，我这批应该是九月第一批发货的。做工也还不错，比较精致但边缘有点瑕疵</p>
<p><img src="http://7xn47h.com1.z0.glb.clouddn.com/2016/9/53eor.JPG" alt="正面"></p>
<p><img src="http://7xn47h.com1.z0.glb.clouddn.com/2016/9/kxsn9.JPG" alt="背面"></p>
<p><img src="http://7xn47h.com1.z0.glb.clouddn.com/2016/9/zqucb.JPG" alt="透明隔层"></p>
<p><img src="http://7xn47h.com1.z0.glb.clouddn.com/2016/9/5hwd7.JPG" alt=""></p>
<p><img src="http://7xn47h.com1.z0.glb.clouddn.com/2016/9/b174o.JPG" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p><strong>信仰</strong>（英语：Faith）是指對一個人（同樣的對他的能力）、事物、神、宗教的教條或教導、沒有經驗證據的觀點（例如擁有強烈的政治信仰）抱有信心和信任    —wikipedia</p>
</blockquote>
<p]]>
    </summary>
    
      <category term="游戏" scheme="http://xxxx.ooo/tags/%E6%B8%B8%E6%88%8F/"/>
    
      <category term="Dota2" scheme="http://xxxx.ooo/tags/Dota2/"/>
    
      <category term="life" scheme="http://xxxx.ooo/categories/life/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[程序员认知]]></title>
    <link href="http://xxxx.ooo/2016/what-is-coder/"/>
    <id>http://xxxx.ooo/2016/what-is-coder/</id>
    <published>2016-09-06T15:21:12.000Z</published>
    <updated>2016-10-09T18:05:59.000Z</updated>
    <content type="html"><![CDATA[<p>目前市面上对程序员有几种认知<br>普遍认知：格子衬衫、牛仔裤、运动鞋、黑色双肩包<br>偏见认知：闷骚、宅男、不会聊天<br>深度认知：聪明、上进、有信仰和情怀<br>极度认知：钱多话少死得早，当老公不二人选</p>
<p>有一次我跟长辈们出去吃饭，桌上一位做 IT 周边行业的叔叔问我，说你们赚多少钱一个月啊。我说没多少，万八千的。叔叔说那肯定得天天加班到半夜吧。<br>我：o(︶︿︶)o ……</p>
<blockquote>
<p>我司虽然是互联网公司，但很少加班，还享受互联网公司各种福利待遇… 有兴趣的同学可以联系（<a href="https://xueqiu.com/about/jobs" target="_blank" rel="external">相关职位信息</a>）</p>
</blockquote>
<p><strong>福利</strong><br>我司码农日常工作图！拖拉板、大裤衩、Macbook Pro、iPhone、机械键盘，不拘一格，不修边幅。</p>
<p><img src="http://7xn47h.com1.z0.glb.clouddn.com/2016/9/IMG_2124.JPG" alt="码农日常"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>目前市面上对程序员有几种认知<br>普遍认知：格子衬衫、牛仔裤、运动鞋、黑色双肩包<br>偏见认知：闷骚、宅男、不会聊天<br>深度认知：聪明、上进、有信仰和情怀<br>极度认知：钱多话少死得早，当老公不二人选</p>
<p>有一次我跟长辈们出去吃饭，桌上一位做 IT 周边]]>
    </summary>
    
      <category term="程序员" scheme="http://xxxx.ooo/tags/%E7%A8%8B%E5%BA%8F%E5%91%98/"/>
    
      <category term="life" scheme="http://xxxx.ooo/categories/life/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[韩式美妆教学]]></title>
    <link href="http://xxxx.ooo/2016/beauty-makeup-han/"/>
    <id>http://xxxx.ooo/2016/beauty-makeup-han/</id>
    <published>2016-08-20T14:21:12.000Z</published>
    <updated>2017-03-17T10:55:25.000Z</updated>
    <content type="html"><![CDATA[<p>某个周末无聊的举动，第一次动手，图个乐呵……</p>
<iframe height="480" width="100%" src="http://player.youku.com/embed/XMTU5MjI2ODU5Mg==" frameborder="0" 'allowfullscreen'=""></iframe>]]></content>
    <summary type="html">
    <![CDATA[<p>某个周末无聊的举动，第一次动手，图个乐呵……</p>
<iframe height="480" width="100%" src="http://player.youku.com/embed/XMTU5MjI2ODU5Mg==" frameborder="0" 'allow]]>
    </summary>
    
      <category term="原创视频" scheme="http://xxxx.ooo/tags/%E5%8E%9F%E5%88%9B%E8%A7%86%E9%A2%91/"/>
    
      <category term="life" scheme="http://xxxx.ooo/categories/life/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[墨菲定律]]></title>
    <link href="http://xxxx.ooo/2016/murphy-law/"/>
    <id>http://xxxx.ooo/2016/murphy-law/</id>
    <published>2016-07-26T15:21:12.000Z</published>
    <updated>2016-09-06T12:40:20.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>墨菲定律：可能会出错的地方一定会出错，如果有多个可能，必定朝最坏的情况发展。大俗话：明明之前没有错，偏偏关键时刻就是出错了  —wikipedia</p>
</blockquote>
<p>这是这两天遇到线上事故的总结</p>
<h5 id="事故过程：">事故过程：</h5><p>早前做了一个系统维护的解决方案，目的阻挡一些涉及维护系统的请求，避免造成数据上的错误。但因业务的扩展，并且多次升级维护都比较顺利，此方案并没有更新覆盖到一些新业务。</p>
<p><strong>升级的过程为：停服务-&gt; 备份数据库 -&gt; 升级服务 -&gt; 重启服务</strong></p>
<p>升级后上线测试业务失败，经过半小时检测未找到原因（事后查出是三方升级包BUG，部分用户可以成功）。随后进行回滚操作，回滚后出现系统数据同步异常，检测发现在维护期间有部分新数据写入，回滚导致部分数据丢失。</p>
<p>好在没有对用户造成经济上的损失，但修数据耗费了大家一整天时间。</p>
<h5 id="主要原因：">主要原因：</h5><ol>
<li>维护方案不是最新，但每次维护都在使用</li>
<li>升级后未经过灰度直接上线测试</li>
<li>线上测试发现问题后未检测是否有新数据就进行回滚</li>
<li>三方提供的升级包质检不合格</li>
</ol>
<p>又一次用血泪印证了墨菲定律。</p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>墨菲定律：可能会出错的地方一定会出错，如果有多个可能，必定朝最坏的情况发展。大俗话：明明之前没有错，偏偏关键时刻就是出错了  —wikipedia</p>
</blockquote>
<p>这是这两天遇到线上事故的总结</p>
<h5 id="事故]]>
    </summary>
    
      <category term="工作" scheme="http://xxxx.ooo/tags/%E5%B7%A5%E4%BD%9C/"/>
    
      <category term="墨菲定律" scheme="http://xxxx.ooo/tags/%E5%A2%A8%E8%8F%B2%E5%AE%9A%E5%BE%8B/"/>
    
      <category term="tech" scheme="http://xxxx.ooo/categories/tech/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[定制自己的健身计划]]></title>
    <link href="http://xxxx.ooo/2016/custom-fitness-plan/"/>
    <id>http://xxxx.ooo/2016/custom-fitness-plan/</id>
    <published>2016-07-18T10:05:35.000Z</published>
    <updated>2016-07-20T13:05:58.000Z</updated>
    <content type="html"><![CDATA[<p>刚开始健身不久，根据自己的情况定制一份适合自己的计划是很有必要的。</p>
<p>健身大多目的有两个，瘦子想变壮与胖子想变瘦（用专业的术语应该说是增肌与减脂）。 多数人都认为减肥更难，长肉还不容易么？多吃多睡呗</p>
<p>其实靠吃就能增重的人往往处于需要减脂的群体中，都是增加了脂肪，而需要增肌的人群大都是百吃不胖，也许是因为体质或者其他因素。</p>
<p>很不幸我是属于「吃不胖」群体的，体脂一直都是在10-15之间。最近去健身房测试竟然是7.x，我想这应该是机器有问题，在增重的道路上路漫漫兮…</p>
<p>这份计划也是在咨询了许多经验人士，并依据自身及场馆情况而制定，考虑场馆因素是因为一些动作是依赖相关器械的。</p>
<h4 id="计划详情：">计划详情：</h4><p><strong>目标</strong>：体重增重5-7kg，增强上肢三围及力量<br><strong>频率</strong>：3-4次/周</p>
<h5 id="胸、二头">胸、二头</h5><p>胸：史密斯卧推/哑铃卧推（上斜、水平、下斜）、蝴蝶机<br>二头：杠铃弯举、哑铃弯举、锤式弯举</p>
<h5 id="背、三头">背、三头</h5><p>背：坐姿下拉、坐姿划船、屈退硬拉<br>三头：拉力器曲臂下压、哑铃屈伸</p>
<h5 id="肩、腿">肩、腿</h5><p>三角肌：哑铃交替前举、哑铃肩上推举、反式蝴蝶机展肩<br>腿：坐姿水平蹬腿、杠铃深蹲</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>刚开始健身不久，根据自己的情况定制一份适合自己的计划是很有必要的。</p>
<p>健身大多目的有两个，瘦子想变壮与胖子想变瘦（用专业的术语应该说是增肌与减脂）。 多数人都认为减肥更难，长肉还不容易么？多吃多睡呗</p>
<p>其实靠吃就能增重的人往往处于需要减脂的群体中，都]]>
    </summary>
    
      <category term="健身" scheme="http://xxxx.ooo/tags/%E5%81%A5%E8%BA%AB/"/>
    
      <category term="健康" scheme="http://xxxx.ooo/tags/%E5%81%A5%E5%BA%B7/"/>
    
      <category term="life" scheme="http://xxxx.ooo/categories/life/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[MTM-FS-Server-Failed]]></title>
    <link href="http://xxxx.ooo/2016/mtm-fs-server-failed/"/>
    <id>http://xxxx.ooo/2016/mtm-fs-server-failed/</id>
    <published>2016-06-22T03:36:16.000Z</published>
    <updated>2016-06-22T05:09:49.000Z</updated>
    <content type="html"><![CDATA[<p>今天处理系统问题时，偶然发现 Console 里系统日志一直在打一些奇怪的错误日志，统计了下总数有 10w+ …</p>
<p> <img src="http://7xn47h.com1.z0.glb.clouddn.com/2016%2F6%2F1466566947114.png" alt="console_log"><br>猜测是哪个软件的流氓进程，直到看到最后这行日志，像是个系统备份服务。<br>mtmfs 是个啥子呢</p>
<blockquote>
<p><strong>mtmfs</strong> is the <em>Mobile Time Machine File System</em>, that handles Local snapshots, both making them and managing them (consolidating, deleting, etc).  They’re made on laptops running Lion whenever Time Machine is ON, whether you’re in range of your Time Machine backup destination or not.  These are completely separate from “normal” Time Machine backups to an external HD, Time Capsule, etc.</p>
</blockquote>
<p>Lion 以上的系统，只要打开了 Time Machine 就会启动 mtmfs 进程。查得 mtmfs 进程监听地址是 localhost ，本地 ping 发现不通。查看 /etc/hosts :<br><code>127.0.0.1 test.pay.inter.domian</code><br>原来是自己测试时把 localhost 域给改掉了，改回来即可<br><code>127.0.0.1 localhost</code></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>今天处理系统问题时，偶然发现 Console 里系统日志一直在打一些奇怪的错误日志，统计了下总数有 10w+ …</p>
<p> <img src="http://7xn47h.com1.z0.glb.clouddn.com/2016%2F6%2F1466566947114]]>
    </summary>
    
      <category term="osx" scheme="http://xxxx.ooo/tags/osx/"/>
    
      <category term="tech" scheme="http://xxxx.ooo/categories/tech/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[一封邮件的故事]]></title>
    <link href="http://xxxx.ooo/2016/story-of-an-email/"/>
    <id>http://xxxx.ooo/2016/story-of-an-email/</id>
    <published>2016-02-29T14:28:00.000Z</published>
    <updated>2016-03-20T14:42:04.000Z</updated>
    <content type="html"><![CDATA[<p>下午收到封邮件，标题是沉痛哀悼xxxx，差点吓尿… 原来是哀悼之前的项目下线。引发了很多的回忆…<br>两年前加入雪球时写了篇十个字博客，今天就来完成那篇文章吧<br>Snowball 是雪球的「核心」项目（从名字就能看出来），就像歌手出道喜欢发行同名专辑一样。也是因为这个项目，雪球在「互联网金融」领域崭露头角。<br><img src="http://7xn47h.com1.z0.glb.clouddn.com/2016%2F2%2F1456759177888.png" alt="email"></p>
<h4 id="第一次上线事故">第一次上线事故</h4><p>记得刚进公司时第一次提交上线代码，是一个技术改造，某个接口虽然已经使用了缓存(redis)，但因为业务较为复杂导致接口速度还是比较慢，最后考虑使用 local-cache 方案替换原有方案。但因为没有仔细了解透业务，导致遗漏一个接口没有替换。上线后，匿名首页出现异常，那时候雪球上线管理非常随意，一天可能上线多次。那次时间正好是下班时后七点左右，我正高兴的和妹纸吃着饭… leader 来电说出问题了，代码回滚，导致饭也没有吃好，以至于至今还记忆犹新。</p>
<p>之后业务发展越来越好，用户越来越多，单一项目带来的坑也越来越多。随后开始做项目拆分、RPC 改造。别扭着从零开始写 scala ，写到后面越来越顺手。之后换到组合业务、做雪球钱包，全都是 Scala 的项目。</p>
<h4 id="公司搬家">公司搬家</h4><p>15 年初公司顺利搬迁望京 SOHO, 也从一个小公司转变为100人左右的「中小型企业」，从一两个小破屋变成了有茶水间，健身房，餐厅，多个会议室的让人羡慕的工作环境，终于像一个土豪互联网企业了。 </p>
<p>公司是大了，但并没有找到自己独有的商业模式。15年开始各种的尝试，当时组合售卖做的风生水起，大家仿佛看到了希望之光，直到某天一位中年秃顶男子来到我司。之前一直都是只闻 「紫金花」其名，不知其厉害。现在亲身体会了…此处省略八百字。</p>
<p>此路不通后开始转向全力做交易，此前组合业务同事大部分都转到目前我们这个基金业务当中了。小半年后我们的产品终于也即将上市了…尽请期待吧</p>
<p>雪球目前一百多人，我的工号 3x 也算是个老油条，现在已经有很多新员工不认识了~ 经常吃饭感觉到了一个陌生的公司…虽然人越来越多，但雪球还是那个雪球。</p>
<h4 id="总结">总结</h4><p>雪球是个好公司，扁平化的管理，宽松的工作环境，管午饭，有年度旅游和各种小福利。产品有自己的逼格，有特有的创新，「组合」上线后已经被多个竞品模仿抄袭。几乎没有办公室斗争，虽然人数过百，还是保持着创业公司的风范。</p>
<p>当然也有缺点，雪球员工多数个性低调含蓄，从 leader 到员工都如此。整个团队环境是比较内敛的，新员工不容易融入，一些入职不久的新员工因为这个原因也很快就离职了。或许这就是雪球团队特有的一种风格。</p>
<p>当然以上所有都是我个人作为一个普通员工的看法，嘿</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>下午收到封邮件，标题是沉痛哀悼xxxx，差点吓尿… 原来是哀悼之前的项目下线。引发了很多的回忆…<br>两年前加入雪球时写了篇十个字博客，今天就来完成那篇文章吧<br>Snowball 是雪球的「核心」项目（从名字就能看出来），就像歌手出道喜欢发行同名专辑一样。也是因为这个]]>
    </summary>
    
      <category term="雪球" scheme="http://xxxx.ooo/tags/%E9%9B%AA%E7%90%83/"/>
    
      <category term="life" scheme="http://xxxx.ooo/categories/life/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[浅谈 Api 设计]]></title>
    <link href="http://xxxx.ooo/2016/about-api-design/"/>
    <id>http://xxxx.ooo/2016/about-api-design/</id>
    <published>2016-01-27T14:15:23.000Z</published>
    <updated>2016-01-27T14:53:34.000Z</updated>
    <content type="html"><![CDATA[<p>之前在团队内做了一次 Api 的规范化，决定采用 RESTful Api 的架构。 并统一了 JSON 结构，约定常用属性、字段的命名方式、URL/HTTP Method 的使用规则。<br>这样的好处不用多说，一个方便易懂，易于使用的 Api 能大大的提高开发效率（做开发的有谁没被第三方 Api 坑过？）  </p>
<h5 id="设计过程">设计过程</h5><p>之前我们有一些设计比较不错的 api 可能是这样的：</p>
<pre><code><span class="regexp">/user/</span>(add<span class="regexp">/get/</span>cancel)?id=<span class="number">123</span>
<span class="regexp">/topic/</span>(create<span class="regexp">/destroy/</span>destroy_batch)?id=<span class="number">123</span> 
</code></pre><p>也算是简单易懂了，那为什么要换成 RESTful 架构？（关于 REST 的特性，设计思想什么的就不说了，网上自取）这样带来最直接的问题就是不统一（规范）。我的 CRUD 叫 add/get/cancel，换一个人可能叫 create/modify/destroy， 甚至可能我的是 adduser 你的是 useradd (瞬间想到了 ubuntu 有木有！)。</p>
<p><strong>规范这东西小范围没什么大问题， 一但队伍庞大了就是个大坑，所以大公司在规范上都是下了大功夫。</strong></p>
<p>HTTP 协议就是一个标准的 REST 实现，RESTful Api 是以 HTTP 协议为强烈依托的，最终我们规范后是这样的：</p>
<pre><code><span class="regexp">/user/</span>{uid} HTTP.GET<span class="regexp">/POST/</span>PUT/DELETE
<span class="regexp">/topic/</span>{tid} HTTP.GET<span class="regexp">/POST/</span>PUT/DELETE
</code></pre><p>暂时只使用这四个方法，使用 PUT 替换 PATCH。很多人对部分情景下 PUT / POST 的使用会有疑问:</p>
<pre><code>解答：根据 HTTP 文档介绍，GET/HEAD/PUT/DELETE 是 Idempotent（重复执行多遍，結果一致）。  
<span class="keyword">POST</span> 每次执行肯定会新增一条记录，大多数情况下可以根据此原则从 <span class="keyword">POST</span>/PUT 中选择合适的动作。  
</code></pre><p>/模块/{id} HTTP.Mehod 这种统一的规范能节省出不少的沟通时间~ 刚开始感觉很美好，当场景多起来之后又出现一些新的问题：<br>有一种功能叫「撤单」，使用 /order/{oid} HTTP.DELETE吗? 那删除订单用什么呢？<br>所以有人开始用 /order/undo/{order_id} HTTP.PUT 类似的方式。按 REST 规范每个 URL 都是一个独立资源，其中不应该包含任何动作。<br>也许应该改成 /order/{oid}?action=undo HTTP.PUT，但这样可能会在同一个接口中引入过多的操作。</p>
<p>类似这样的模糊的场景可能有许多，在 Api 数量随业务庞大的过程中需要反复的对当前 Api 做迭代重构，使它更适合当前的业务场景</p>
<h5 id="那满足以上设计就是_RESTful_Api_吗？">那满足以上设计就是 RESTful Api 吗？</h5><pre><code><span class="string">eg:</span> <span class="regexp">/topic/</span>fav/{tid} HTTP.POST 收藏某个话题
</code></pre><p>这个接口需要从 token 中获取登陆用户信息，且所有的用户都是访问同一个地址。<br>这与 REST 架构中的「无状态」和「唯一资源」的概念冲突。<br>按要求可能是这样的：</p>
<pre><code><span class="regexp">/topic/</span>{uid}<span class="regexp">/fav/</span>{tid} 
</code></pre><p>当然这些都是 REST 的建议，如何做还是要根据具体的业务情况而定</p>
<h5 id="总结下来就是以下几点：">总结下来就是以下几点：</h5><ol>
<li>规范很重要</li>
<li>保持 Api 的优雅是一件持续的重复迭代的工作</li>
<li>不要局限于各种规范中，要在设计规范的时候充分考虑业务上的灵活性</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<p>之前在团队内做了一次 Api 的规范化，决定采用 RESTful Api 的架构。 并统一了 JSON 结构，约定常用属性、字段的命名方式、URL/HTTP Method 的使用规则。<br>这样的好处不用多说，一个方便易懂，易于使用的 Api 能大大的提高开发效率（做开发]]>
    </summary>
    
      <category term="Api" scheme="http://xxxx.ooo/tags/Api/"/>
    
      <category term="程序设计" scheme="http://xxxx.ooo/tags/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="tech" scheme="http://xxxx.ooo/categories/tech/"/>
    
  </entry>
  
</feed>