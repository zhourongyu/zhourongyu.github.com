<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  
  <title><![CDATA[某某某某]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://xxxx.ooo//"/>
  <updated>2019-03-20T03:45:45.000Z</updated>
  <id>http://xxxx.ooo//</id>
  
  <author>
    <name><![CDATA[山荣]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[一次离奇的JVM Crash]]></title>
    <link href="http://xxxx.ooo/2019/%E4%B8%80%E6%AC%A1%E7%A6%BB%E5%A5%87%E7%9A%84JVM-Crash/"/>
    <id>http://xxxx.ooo/2019/一次离奇的JVM-Crash/</id>
    <published>2019-03-18T13:31:18.000Z</published>
    <updated>2019-03-20T03:45:45.000Z</updated>
    <content type="html"><![CDATA[<h4 id="背景">背景</h4><p>最近线上某个服务出现了 JVM Crash 现象，并且每次都发生在比较相近的时间段里，下面是某一次的日志</p>
<figure class="highlight x86asm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div></pre></td><td class="code"><pre><div class="line">#</div><div class="line"># A fatal error has been detected by the Java Runtime Environment:</div><div class="line">#</div><div class="line">#  SIGSEGV (<span class="number">0xb</span>) <span class="meta">at</span> pc=<span class="number">0x00007ff3ed5c1811</span>, pid=<span class="number">192</span>, tid=<span class="number">140655176587008</span> </div><div class="line">#</div><div class="line"># JRE version: Java(TM) SE Runtime Environment (<span class="number">8.0_45</span>-b14) (build <span class="number">1.8</span><span class="meta">.0_45</span>-b14)</div><div class="line"># Java VM: Java HotSpot(TM) <span class="number">64</span>-Bit Server VM (<span class="number">25.45</span>-b02 mixed mode linux-amd64 compressed oops)</div><div class="line"># Problematic frame:</div><div class="line"># J <span class="number">9931</span> C2 java.util.ArrayList.contains(Ljava/lang/Object<span class="comment">;)Z (14 bytes) @ 0x00007ff3ed5c1811 [0x00007ff3ed5c17c0+0x51]</span></div><div class="line"># Failed to write core dump. Core dumps have been disabled. To enable core dumping, try <span class="string">"ulimit -c unlimited"</span> before starting Java again</div><div class="line"></div><div class="line">---------------  T H R E A D  ---------------</div><div class="line"></div><div class="line">Current thread (<span class="number">0x00007ff36c20f000</span>):  JavaThread <span class="string">"ForkJoinPool-55-worker-0"</span> daemon [_thread_in_Java, id=<span class="number">84902</span>, stack(<span class="number">0x00007fecd5c61000</span>,<span class="number">0x00007fecd5d62000</span>)]</div><div class="line"><span class="symbol"></span></div><div class="line">siginfo: si_signo: <span class="number">11</span> (SIGSEGV), si_code: <span class="number">1</span> (SEGV_MAPERR), si_addr: <span class="number">0x0000000000000009</span> </div><div class="line"><span class="symbol"></span></div><div class="line">Registers:</div><div class="line"><span class="built_in">RAX</span>=<span class="number">0x00000007c001b6c0</span>, <span class="built_in">RBX</span>=<span class="number">0x0000000000000002</span>, <span class="built_in">RCX</span>=<span class="number">0x00000000ebfedc3e</span>, <span class="built_in">RDX</span>=<span class="number">0x0000000000000001</span></div><div class="line"><span class="built_in">RSP</span>=<span class="number">0x00007fecd5d5fb10</span>, <span class="built_in">RBP</span>=<span class="number">0x0000000000000000</span>, <span class="built_in">RSI</span>=<span class="number">0x000000075ff6e108</span>, <span class="built_in">RDI</span>=<span class="number">0x0000000000000002</span></div><div class="line"><span class="built_in">R8</span> =<span class="number">0x0000000000000002</span>, <span class="built_in">R9</span> =<span class="number">0x00000000ebfedc32</span>, <span class="built_in">R10</span>=<span class="number">0x00000007c001b6c0</span>, <span class="built_in">R11</span>=<span class="number">0x0000000000000000</span></div><div class="line"><span class="built_in">R12</span>=<span class="number">0x0000000000000000</span>, <span class="built_in">R13</span>=<span class="number">0x0000000000000002</span>, <span class="built_in">R14</span>=<span class="number">0x000000075ff6e1d8</span>, <span class="built_in">R15</span>=<span class="number">0x00007ff36c20f000</span></div><div class="line"><span class="built_in">RIP</span>=<span class="number">0x00007ff3ed5c1811</span>, EFLAGS=<span class="number">0x0000000000010202</span>, CSGSFS=<span class="number">0x0000000000000033</span>, ERR=<span class="number">0x0000000000000004</span></div><div class="line">  TRAPNO=<span class="number">0x000000000000000e</span></div><div class="line">  </div><div class="line">Top of Stack: (<span class="built_in">sp</span>=<span class="number">0x00007fecd5d5fb10</span>)</div><div class="line"><span class="number">0x00007fecd5d5fb10</span>:   000000000000003f <span class="number">0000000000000000</span></div><div class="line"><span class="number">0x00007fecd5d5fb20</span>:   00000005c5a0b488 00000007c0412700</div><div class="line"><span class="number">0x00007fecd5d5fb30</span>:   00000000ebfe7804 000000075fecbe70</div><div class="line"><span class="number">0x00007fecd5d5fb40</span>:   00000000b8ca514c 00007ff3f2b5e2ec</div><div class="line"><span class="number">0x00007fecd5d5fb50</span>:   00007fecd5d5fb90 00007fecd5d5fb80</div><div class="line"><span class="number">0x00007fecd5d5fb60</span>:   00007ff248698ec0 000000001e61f9cd</div><div class="line">...</div><div class="line"><span class="symbol"></span></div><div class="line">Instructions: (pc=<span class="number">0x00007ff3ed5c1811</span>)</div><div class="line"><span class="number">0x00007ff3ed5c17f1</span>:   c4 e1 f9 6e ce 8b 4e <span class="number">14</span> <span class="number">44</span> 8b <span class="number">46</span> <span class="number">10</span> <span class="number">33</span> ed <span class="number">48</span> <span class="number">85</span></div><div class="line"><span class="number">0x00007ff3ed5c1801</span>:   d2 0f <span class="number">84</span> <span class="number">95</span> <span class="number">04</span> <span class="number">00</span> <span class="number">00</span> <span class="number">45</span> <span class="number">85</span> c0 0f 8e <span class="number">65</span> <span class="number">03</span> <span class="number">00</span> <span class="number">00</span></div><div class="line"><span class="number">0x00007ff3ed5c1811</span>:   <span class="number">44</span> 8b <span class="number">52</span> <span class="number">08</span> <span class="number">41</span> <span class="number">81</span> fa da <span class="number">02</span> <span class="number">00</span> f8 0f <span class="number">85</span> a8 <span class="number">05</span> <span class="number">00</span></div><div class="line"><span class="number">0x00007ff3ed5c1821</span>:   <span class="number">00</span> <span class="number">45</span> 8b 6c cc 0c <span class="number">49</span> <span class="number">8d</span> 2c cc <span class="number">45</span> <span class="number">85</span> ed 0f <span class="number">86</span> <span class="number">48</span> </div><div class="line"></div><div class="line">Register to memory mapping:</div><div class="line"></div><div class="line"><span class="built_in">RAX</span>=<span class="number">0x00000007c001b6c0</span> is pointing <span class="keyword">into</span> metadata</div><div class="line"><span class="built_in">RBX</span>=<span class="number">0x0000000000000002</span> is an unknown value</div><div class="line"><span class="built_in">RCX</span>=<span class="number">0x00000000ebfedc3e</span> is an unknown value</div><div class="line"><span class="built_in">RDX</span>=<span class="number">0x0000000000000001</span> is an unknown value</div><div class="line"><span class="built_in">RSP</span>=<span class="number">0x00007fecd5d5fb10</span> is pointing <span class="keyword">into</span> the stack for thread: <span class="number">0x00007ff36c20f000</span></div><div class="line"><span class="built_in">RBP</span>=<span class="number">0x0000000000000000</span> is an unknown value</div><div class="line"><span class="built_in">RSI</span>=</div><div class="line">[error occurred during error reporting (printing register info), id <span class="number">0xb</span>]</div><div class="line"><span class="symbol"></span></div><div class="line">Stack: [<span class="number">0x00007fecd5c61000</span>,<span class="number">0x00007fecd5d62000</span>],  <span class="built_in">sp</span>=<span class="number">0x00007fecd5d5fb10</span>,  free space=1018k</div><div class="line">Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)</div><div class="line">J <span class="number">9931</span> C2 java.util.ArrayList.contains(Ljava/lang/Object<span class="comment">;)Z (14 bytes) @ 0x00007ff3ed5c1811 [0x00007ff3ed5c17c0+0x51]</span></div><div class="line"></div><div class="line"></div><div class="line">---------------  P R O C E S S  ---------------</div><div class="line"></div><div class="line">Java Threads: ( =&gt; current thread )</div><div class="line">  <span class="number">0x00007fee48009800</span> JavaThread <span class="string">"hystrix-fuiou_default-10"</span> daemon [_thread_in_native, id=<span class="number">84913</span>, stack(<span class="number">0x00007fecd6a6f000</span>,<span class="number">0x00007fecd6b70000</span>)]</div><div class="line">=&gt;<span class="number">0x00007ff36c20f000</span> JavaThread <span class="string">"ForkJoinPool-55-worker-0"</span> daemon [_thread_in_Java, id=<span class="number">84902</span>, stack(<span class="number">0x00007fecd5c61000</span>,<span class="number">0x00007fecd5d62000</span>)]</div><div class="line">  <span class="number">0x00007fee4400a000</span> JavaThread <span class="string">"ForkJoinPool-55-worker-3"</span> daemon [_thread_blocked, id=<span class="number">84901</span>, stack(<span class="number">0x00007fecd5d62000</span>,<span class="number">0x00007fecd5e63000</span>)]</div><div class="line">  ...</div><div class="line">  </div><div class="line">  Internal exceptions (<span class="number">10</span> events):</div><div class="line"><span class="symbol">Event:</span> <span class="number">42112.006</span> Thread <span class="number">0x00007fee6c014800</span> Exception &lt;a <span class="string">'java/lang/ClassNotFoundException'</span>: com/xueqiu/fundx/market/domain/FundDataStockDetailPercentCustomizer&gt; (<span class="number">0x000000077aad98c0</span>) thrown <span class="meta">at</span> [/RE-WORK/workspace/<span class="number">8</span>-<span class="number">2</span>-build-linux-amd64/jdk8u45/<span class="number">3457</span>/hotspot/src/share/vm/classfile/systemDictionary.cpp</div><div class="line"><span class="symbol">Event:</span> <span class="number">42112.007</span> Thread <span class="number">0x00007fee6c014800</span> Exception &lt;a <span class="string">'java/lang/ClassNotFoundException'</span>: com/xueqiu/fundx/market/domain/FundDataStockDetailPercentBeanInfo&gt; (<span class="number">0x000000077ab42100</span>) thrown <span class="meta">at</span> [/RE-WORK/workspace/<span class="number">8</span>-<span class="number">2</span>-build-linux-amd64/jdk8u45/<span class="number">3457</span>/hotspot/src/share/vm/classfile/systemDictionary.cpp, </div><div class="line"><span class="symbol">Event:</span> <span class="number">42112.008</span> Thread <span class="number">0x00007fee6c014800</span> Exception &lt;a <span class="string">'java/lang/ClassNotFoundException'</span>: com/xueqiu/fundx/market/domain/FundDataStockDetailPercentCustomizer&gt; (<span class="number">0x000000077aba3a70</span>) thrown <span class="meta">at</span> [/RE-WORK/workspace/<span class="number">8</span>-<span class="number">2</span>-build-linux-amd64/jdk8u45/<span class="number">3457</span>/hotspot/src/share/vm/classfile/systemDictionary.cpp</div><div class="line"><span class="symbol">Event:</span> <span class="number">42112.009</span> Thread <span class="number">0x00007fee6c014800</span> Exception &lt;a <span class="string">'java/lang/ClassNotFoundException'</span>: com/xueqiu/fundx/market/domain/FundDataStockDetailPercentBeanInfo&gt; (<span class="number">0x000000077a40c330</span>) thrown <span class="meta">at</span> [/RE-WORK/workspace/<span class="number">8</span>-<span class="number">2</span>-build-linux-amd64/jdk8u45/<span class="number">3457</span>/hotspot/src/share/vm/classfile/systemDictionary.cpp, </div><div class="line"><span class="symbol">Event:</span> <span class="number">42112.009</span> Thread <span class="number">0x00007fee6c014800</span> Exception &lt;a <span class="string">'java/lang/ClassNotFoundException'</span>: com/xueqiu/fundx/market/domain/FundDataStockDetailPercentCustomizer&gt; (<span class="number">0x000000077a46dca0</span>) thrown <span class="meta">at</span> [/RE-WORK/workspace/<span class="number">8</span>-<span class="number">2</span>-build-linux-amd64/jdk8u45/<span class="number">3457</span>/hotspot/src/share/vm/classfile/systemDictionary.cpp</div><div class="line"><span class="symbol">Event:</span> <span class="number">42112.192</span> Thread <span class="number">0x00007ff154083000</span> Exception &lt;a <span class="string">'java/net/SocketTimeoutException'</span>: Read timed <span class="keyword">out</span>&gt; (<span class="number">0x0000000779e96098</span>) thrown <span class="meta">at</span> [/RE-WORK/workspace/<span class="number">8</span>-<span class="number">2</span>-build-linux-amd64/jdk8u45/<span class="number">3457</span>/hotspot/src/share/vm/prims/jni.cpp, line <span class="number">735</span>]</div><div class="line"><span class="symbol">Event:</span> <span class="number">42112.817</span> Thread <span class="number">0x00007ff154265800</span> Exception &lt;a <span class="string">'java/net/SocketTimeoutException'</span>: Read timed <span class="keyword">out</span>&gt; (<span class="number">0x000000077743dc38</span>) thrown <span class="meta">at</span> [/RE-WORK/workspace/<span class="number">8</span>-<span class="number">2</span>-build-linux-amd64/jdk8u45/<span class="number">3457</span>/hotspot/src/share/vm/prims/jni.cpp, line <span class="number">735</span>]</div><div class="line"><span class="symbol">Event:</span> <span class="number">42113.412</span> Thread <span class="number">0x00007ff15427e000</span> Exception &lt;a <span class="string">'java/net/SocketTimeoutException'</span>: Read timed <span class="keyword">out</span>&gt; (<span class="number">0x00000007747e4f80</span>) thrown <span class="meta">at</span> [/RE-WORK/workspace/<span class="number">8</span>-<span class="number">2</span>-build-linux-amd64/jdk8u45/<span class="number">3457</span>/hotspot/src/share/vm/prims/jni.cpp, line <span class="number">735</span>]</div><div class="line"><span class="symbol">Event:</span> <span class="number">42114.344</span> Thread <span class="number">0x00007ff154351000</span> Exception &lt;a <span class="string">'java/net/SocketTimeoutException'</span>: Read timed <span class="keyword">out</span>&gt; (<span class="number">0x000000076d9d3658</span>) thrown <span class="meta">at</span> [/RE-WORK/workspace/<span class="number">8</span>-<span class="number">2</span>-build-linux-amd64/jdk8u45/<span class="number">3457</span>/hotspot/src/share/vm/prims/jni.cpp, line <span class="number">735</span>]</div><div class="line"><span class="symbol">Event:</span> <span class="number">42115.538</span> Thread <span class="number">0x00007ff36c20f000</span> Implicit null exception <span class="meta">at</span> <span class="number">0x00007ff3ed5c1811</span> to <span class="number">0x0000000000000000</span></div><div class="line"></div><div class="line">Events (<span class="number">10</span> events):</div><div class="line"><span class="symbol">Event:</span> <span class="number">42112.009</span> loading class com/xueqiu/fundx/market/domain/FundDataStockDetailPercentCustomizer</div><div class="line"><span class="symbol">Event:</span> <span class="number">42112.009</span> loading class com/xueqiu/fundx/market/domain/FundDataStockDetailPercentCustomizer done</div><div class="line"><span class="symbol">Event:</span> <span class="number">42112.009</span> loading class com/xueqiu/fundx/market/domain/FundDataStockDetailPercentCustomizer</div><div class="line"><span class="symbol">Event:</span> <span class="number">42112.009</span> loading class com/xueqiu/fundx/market/domain/FundDataStockDetailPercentCustomizer done</div><div class="line"><span class="symbol">Event:</span> <span class="number">42112.009</span> loading class com/xueqiu/fundx/market/domain/FundDataStockDetailPercentCustomizer</div><div class="line"><span class="symbol">Event:</span> <span class="number">42112.009</span> loading class com/xueqiu/fundx/market/domain/FundDataStockDetailPercentCustomizer done</div><div class="line"><span class="symbol">Event:</span> <span class="number">42112.284</span> Thread <span class="number">0x00007ff3fce22000</span> flushing nmethod <span class="number">0x00007ff3f5a26250</span></div><div class="line"><span class="symbol">Event:</span> <span class="number">42112.284</span> Thread <span class="number">0x00007ff3fce22000</span> flushing nmethod <span class="number">0x00007ff3f5a43390</span></div><div class="line"><span class="symbol">Event:</span> <span class="number">42112.288</span> Thread <span class="number">0x00007ff3fce22000</span> flushing nmethod <span class="number">0x00007ff3f63395d0</span></div><div class="line"><span class="symbol">Event:</span> <span class="number">42114.505</span> Thread <span class="number">0x00007ff0cc017800</span> Thread added: <span class="number">0x00007ff0cc017800</span></div></pre></td></tr></table></figure>
<h4 id="分析错误日志">分析错误日志</h4><p>从日志中能获取到的重要信息</p>
<figure class="highlight http"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">siginfo</span>: si_signo: 11 (SIGSEGV), si_code: 1 (SEGV_MAPERR), si_addr: 0x0000000000000009 </div><div class="line"></div><div class="line"><span class="livecodeserver">SIGSEGV: A segmentation fault occurs when <span class="keyword">a</span> program attempts <span class="built_in">to</span> access <span class="keyword">a</span> memory location that <span class="keyword">it</span> is <span class="keyword">not</span> allowed <span class="built_in">to</span> access, <span class="keyword">or</span> attempts <span class="built_in">to</span> access <span class="keyword">a</span> memory location <span class="keyword">in</span> <span class="keyword">a</span> way that is <span class="keyword">not</span> allowed (<span class="keyword">for</span> example, attempting <span class="built_in">to</span> <span class="built_in">write</span> <span class="built_in">to</span> <span class="keyword">a</span> <span class="built_in">read</span>-only location, <span class="keyword">or</span> <span class="built_in">to</span> overwrite part <span class="keyword">of</span> <span class="keyword">the</span> operating <span class="keyword">system</span>).</span></div><div class="line"></div><div class="line">访问了一个无效的内存引用(可能是不允许访问的内存地址，或者是禁止的访问方式)</div><div class="line"></div><div class="line">SEGV_MAPERR ：地址没有映射到对象</div><div class="line"></div><div class="line">siaddr: <span class="number">0x0000000000000009</span> </div><div class="line">这个就是访问的地址，<span class="number">0x00000000</span><span class="number">-0x0000FFFF</span> 是进程<span class="literal">NULL</span>区的保留地址，禁止访问</div><div class="line"></div><div class="line">Event: Thread <span class="number">0x00007ff36c20f000</span> Implicit <span class="literal">null</span> exception <span class="keyword">at</span> <span class="number">0x00007ff3ed5c1811</span> <span class="built_in">to</span> <span class="number">0x0000000000000000</span></div><div class="line">提示了这是一个隐式空指针问题</div></pre></td></tr></table></figure>
<p>从线程名中找到对应的代码逻辑块，并没有发现对 ArrayList.contains 的调用，随后通过使用 udcli 转译指令成汇编，貌似也没有找到匹配的代码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">➜  ~ echo &apos;44 8b 52 08 41 81 fa da 02 00 f8 0f 85 a8 05 00&apos; |udcli -intel -x -64 -o 0x00007ff3ed5c1811</div><div class="line">00007ff3ed5c1811 448b5208         mov r10d, [rdx+0x8] //转移 rdx+8 (也就是出问题的地址)</div><div class="line">00007ff3ed5c1815 4181fada0200f8   cmp r10d, 0xf80002da //比较俩个值(相减)，应该是个比大小的操作</div><div class="line">00007ff3ed5c181c 0f85a80500       invalid</div></pre></td></tr></table></figure>
<p>暂时没有什么头绪，想借助 core dump 来进行更深入的分析，但因为我们应用跑在 Docker 里，core dump 默认没有打开。</p>
<p>首先找 SRE 团队配合改一下 Docker 的配置，另外在应用内加上了更多的定位日志，希望能定位到具体行。</p>
<figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="number">1</span>. docker <span class="keyword">run</span><span class="bash"> 参数里的加上 --ulimit core=-1 </span></div><div class="line"><span class="number">2</span>. 在 /etc/sysctl.conf 里可以配置文件生成路径</div><div class="line">kernel.core_pattern = /persist/core_%e_%p</div></pre></td></tr></table></figure>
<h4 id="尝试定位修复">尝试定位修复</h4><p>等待下一次 crash 期间也做了几件事</p>
<ul>
<li><p>猜测是否是使用了 forkjoin 框架本身的问题，随后替换成标准的线程池，无用</p>
</li>
<li><p>根据日志定位到了大概的代码块，是一个普通是 foreach 中，仔细分析后似乎没有发现问题</p>
</li>
<li><p>再次仔细的分析了下crash 日志，发现每次都会有相应的 jni 调用及某个类的异常，如下</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="string">Event:</span> <span class="number">42112.009</span> Thread <span class="number">0x00007fee6c014800</span> Exception &lt;a <span class="string">'java/lang/ClassNotFoundException'</span>: com<span class="regexp">/xueqiu/</span>fundx<span class="regexp">/market/</span>domain<span class="regexp">/FundDataStockDetailPercentCustomizer&gt; (0x000000077a46dca0) thrown at [/</span>RE-WORK<span class="regexp">/workspace/</span><span class="number">8</span><span class="number">-2</span>-build-linux-amd64<span class="regexp">/jdk8u45/</span><span class="number">3457</span><span class="regexp">/hotspot/</span>src<span class="regexp">/share/</span>vm<span class="regexp">/classfile/</span>systemDictionary.cpp</div><div class="line"><span class="string">Event:</span> <span class="number">42112.192</span> Thread <span class="number">0x00007ff154083000</span> Exception &lt;a <span class="string">'java/net/SocketTimeoutException'</span>: Read timed out&gt; (<span class="number">0x0000000779e96098</span>) thrown at [<span class="regexp">/RE-WORK/</span>workspace<span class="regexp">/8-2-build-linux-amd64/</span>jdk8u45<span class="regexp">/3457/</span>hotspot<span class="regexp">/src/</span>share<span class="regexp">/vm/</span>prims/jni.cpp, line <span class="number">735</span>]</div></pre></td></tr></table></figure>
<p>根据线程分析，这是一个MQ的触发事件，<strong>但如果是JNI导致的错误，为什么是另外一个线程的异常 Crash，这里没有想通</strong></p>
</li>
</ul>
<h4 id="分析_core_dump">分析 core dump</h4><p>拿到 core dump 后，首先想通过 jstack 获取到具体的异常栈信息，栈信息已丢失</p>
<figure class="highlight pf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Thread <span class="number">84902</span>: (<span class="keyword">state</span> = IN_JAVA) //线程正在执行编译后的Java代码</div></pre></td></tr></table></figure>
<p>尝试使用 jmap 导出内存 dump，失败</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">app@bjxg-vd-<span class="number">9</span>-<span class="number">201</span>:~$ jmap -dump:format=<span class="selector-tag">b</span>,file=heap<span class="selector-class">.hprof</span> /usr/bin/java core_java_192</div><div class="line">Picked up _JAVA_OPTIONS: -Djava<span class="selector-class">.net</span><span class="selector-class">.preferIPv4Stack</span>=true -Dfile.encoding=UTF-<span class="number">8</span></div><div class="line">Attaching to core core_java_192 from executable /usr/bin/java, please wait...</div><div class="line">Debugger attached successfully.</div><div class="line">Server compiler detected.</div><div class="line">JVM version is <span class="number">25.45</span>-b02</div><div class="line">Dumping heap to heap2<span class="selector-class">.hprof</span> ...</div><div class="line">Exception <span class="keyword">in</span> thread <span class="string">"main"</span> java<span class="selector-class">.lang</span><span class="selector-class">.reflect</span><span class="selector-class">.InvocationTargetException</span></div><div class="line"> at sun<span class="selector-class">.reflect</span><span class="selector-class">.NativeMethodAccessorImpl</span><span class="selector-class">.invoke0</span>(Native Method)</div><div class="line"> at sun<span class="selector-class">.reflect</span><span class="selector-class">.NativeMethodAccessorImpl</span><span class="selector-class">.invoke</span>(NativeMethodAccessorImpl<span class="selector-class">.java</span>:<span class="number">62</span>)</div><div class="line"> at sun<span class="selector-class">.reflect</span><span class="selector-class">.DelegatingMethodAccessorImpl</span><span class="selector-class">.invoke</span>(DelegatingMethodAccessorImpl<span class="selector-class">.java</span>:<span class="number">43</span>)</div><div class="line"> at java<span class="selector-class">.lang</span><span class="selector-class">.reflect</span><span class="selector-class">.Method</span><span class="selector-class">.invoke</span>(Method<span class="selector-class">.java</span>:<span class="number">497</span>)</div><div class="line"> at sun<span class="selector-class">.tools</span><span class="selector-class">.jmap</span><span class="selector-class">.JMap</span><span class="selector-class">.runTool</span>(JMap<span class="selector-class">.java</span>:<span class="number">201</span>)</div><div class="line"> at sun<span class="selector-class">.tools</span><span class="selector-class">.jmap</span><span class="selector-class">.JMap</span><span class="selector-class">.main</span>(JMap<span class="selector-class">.java</span>:<span class="number">130</span>)</div><div class="line">Caused by: sun<span class="selector-class">.jvm</span><span class="selector-class">.hotspot</span><span class="selector-class">.utilities</span><span class="selector-class">.AssertionFailure</span>: can not get class data <span class="keyword">for</span> java/util/stream/FindOps$<span class="variable">$Lambda</span>$<span class="number">210</span>x00000007c019bc28</div><div class="line"> at sun<span class="selector-class">.jvm</span><span class="selector-class">.hotspot</span><span class="selector-class">.utilities</span><span class="selector-class">.Assert</span><span class="selector-class">.that</span>(Assert<span class="selector-class">.java</span>:<span class="number">32</span>)</div><div class="line"> at sun<span class="selector-class">.jvm</span><span class="selector-class">.hotspot</span><span class="selector-class">.utilities</span><span class="selector-class">.HeapHprofBinWriter</span><span class="selector-class">.writeInstance</span>(HeapHprofBinWriter<span class="selector-class">.java</span>:<span class="number">803</span>)</div><div class="line"> at sun<span class="selector-class">.jvm</span><span class="selector-class">.hotspot</span><span class="selector-class">.utilities</span><span class="selector-class">.AbstractHeapGraphWriter</span>$<span class="number">1</span>.doObj(AbstractHeapGraphWriter<span class="selector-class">.java</span>:<span class="number">95</span>)</div><div class="line"> at sun<span class="selector-class">.jvm</span><span class="selector-class">.hotspot</span><span class="selector-class">.oops</span><span class="selector-class">.ObjectHeap</span><span class="selector-class">.iterateLiveRegions</span>(ObjectHeap<span class="selector-class">.java</span>:<span class="number">353</span>)</div><div class="line"> at sun<span class="selector-class">.jvm</span><span class="selector-class">.hotspot</span><span class="selector-class">.oops</span><span class="selector-class">.ObjectHeap</span><span class="selector-class">.iterate</span>(ObjectHeap<span class="selector-class">.java</span>:<span class="number">171</span>)</div><div class="line"> at sun<span class="selector-class">.jvm</span><span class="selector-class">.hotspot</span><span class="selector-class">.utilities</span><span class="selector-class">.AbstractHeapGraphWriter</span><span class="selector-class">.write</span>(AbstractHeapGraphWriter<span class="selector-class">.java</span>:<span class="number">51</span>)</div><div class="line"> at sun<span class="selector-class">.jvm</span><span class="selector-class">.hotspot</span><span class="selector-class">.utilities</span><span class="selector-class">.HeapHprofBinWriter</span><span class="selector-class">.write</span>(HeapHprofBinWriter<span class="selector-class">.java</span>:<span class="number">433</span>)</div><div class="line"> at sun<span class="selector-class">.jvm</span><span class="selector-class">.hotspot</span><span class="selector-class">.tools</span><span class="selector-class">.HeapDumper</span><span class="selector-class">.run</span>(HeapDumper<span class="selector-class">.java</span>:<span class="number">62</span>)</div><div class="line"> at sun<span class="selector-class">.jvm</span><span class="selector-class">.hotspot</span><span class="selector-class">.tools</span><span class="selector-class">.Tool</span><span class="selector-class">.startInternal</span>(Tool<span class="selector-class">.java</span>:<span class="number">260</span>)</div><div class="line"> at sun<span class="selector-class">.jvm</span><span class="selector-class">.hotspot</span><span class="selector-class">.tools</span><span class="selector-class">.Tool</span><span class="selector-class">.start</span>(Tool<span class="selector-class">.java</span>:<span class="number">223</span>)</div><div class="line"> at sun<span class="selector-class">.jvm</span><span class="selector-class">.hotspot</span><span class="selector-class">.tools</span><span class="selector-class">.Tool</span><span class="selector-class">.execute</span>(Tool<span class="selector-class">.java</span>:<span class="number">118</span>)</div><div class="line"> at sun<span class="selector-class">.jvm</span><span class="selector-class">.hotspot</span><span class="selector-class">.tools</span><span class="selector-class">.HeapDumper</span><span class="selector-class">.main</span>(HeapDumper<span class="selector-class">.java</span>:<span class="number">83</span>)</div><div class="line"> ... <span class="number">6</span> more</div></pre></td></tr></table></figure>
<p>随后尝试使用 gdb 加载分析</p>
<figure class="highlight x86asm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">(gdb) <span class="keyword">bt</span></div><div class="line">#<span class="number">0</span>  <span class="number">0x00007ff40130ecc9</span> <span class="keyword">in</span> _quicksort (pbase=<span class="number">0x0</span>, total_elems=&lt;optimized <span class="keyword">out</span>&gt;, size=<span class="number">32</span>, <span class="keyword">cmp</span>=<span class="number">0x7fecd5d5d420</span>, arg=<span class="number">0x7ff401269640</span> &lt;OnError&gt;) <span class="meta">at</span> qsort.c:<span class="number">128</span></div><div class="line">#<span class="number">1</span>  <span class="number">0x0000000000010206</span> <span class="keyword">in</span> ?? ()</div><div class="line">#<span class="number">2</span>  <span class="number">0x0000000000000033</span> <span class="keyword">in</span> ?? ()</div><div class="line">#<span class="number">3</span>  <span class="number">0x0000000000000004</span> <span class="keyword">in</span> ?? ()</div><div class="line">#<span class="number">4</span>  <span class="number">0x000000000000000e</span> <span class="keyword">in</span> ?? ()</div><div class="line">#<span class="number">5</span>  <span class="number">0xfffffffe7ffbfaff</span> <span class="keyword">in</span> ?? ()</div><div class="line">#<span class="number">6</span>  <span class="number">0x0000000000000030</span> <span class="keyword">in</span> ?? ()</div><div class="line">#<span class="number">7</span>  <span class="number">0x00007fecd5d5d880</span> <span class="keyword">in</span> ?? ()</div><div class="line">#<span class="number">8</span>  <span class="number">0x00007ff4009ee156</span> <span class="keyword">in</span> jni_GetObjectField () from /data/jdk1<span class="meta">.8</span><span class="meta">.0_45</span>/jre/lib/amd64/server/libjvm.so</div><div class="line">Backtrace stopped: previous frame inner to this frame (corrupt stack?)</div></pre></td></tr></table></figure>
<p>Backtrace 最后一帧是一个qsort 函数，这里和之前汇编 cmp 操作能对应上</p>
<p>至此大概猜测是某种原因破坏了堆内存，例如 JNI 调用使用了错误的参数触发了空指针等</p>
<p>最后尝试一下更新 JDK 版本，1.8.0_45 -&gt; 1.8.0_201，尝试之后至今还未再次发生Crash 事件，难道真的是一个JDK 的bug 吗？</p>
]]></content>
    <summary type="html">
    <![CDATA[<h4 id="背景">背景</h4><p>最近线上某个服务出现了 JVM Crash 现象，并且每次都发生在比较相近的时间段里，下面是某一次的日志</p>
<figure class="highlight x86asm"><table><tr><td class="gutter]]>
    </summary>
    
      <category term="jvm" scheme="http://xxxx.ooo/tags/jvm/"/>
    
      <category term="tech" scheme="http://xxxx.ooo/categories/tech/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Spring Boot 2.0 升级指北]]></title>
    <link href="http://xxxx.ooo/2018/spring-boot-2-0-upgrade/"/>
    <id>http://xxxx.ooo/2018/spring-boot-2-0-upgrade/</id>
    <published>2018-06-05T16:46:39.000Z</published>
    <updated>2019-03-18T14:20:35.000Z</updated>
    <content type="html"><![CDATA[<p>雪球内部很早就开始尝试使用 Spring Boot，我们团队是第一批吃螃蟹的人（使用的版本是 v1.2.4，发布于 2015 年中）。到目前 Spring Boot 已经成为公司内普及的基础底层框架，但各个团队之间使用上并不统一，1.2、1.3、1.5 版本都有在使用，也引发了一些中间件的版本依赖问题。</p>
<p>我们的版本是其中最古老的，已经偏离了四个大版本。其实很早就有升级的规划，在 1.5 版本期间有尝试过一次，因为涉及的改动很多加上当时业务繁忙所以停滞了。Spring Boot 2.0 release 版本在三月份发布，四月正好空余出较大块的时间，趁这个天时地利机会把整个后端模块全部升级到了 2.0 基准。</p>
<p>这次会分享一些升级过程中的一些经验及遇到问题、踩过的坑，旨在帮助大家能更顺畅的升级，顺便推动大家在合适的机会把版本升级到统一基准下。</p>
<h5 id="简单介绍下新特性">简单介绍下新特性</h5><p>Spinrg Boot 2.0 带来最大的新特性是 Reactive Spring &amp; WebFlux，准确的说是因为引入了 Spring 5.0。</p>
<p>Reactive Programing（响应式编程，以下简称 RP）核心思想是利用异步和消息驱动构建一个流畅的高弹性的系统。 RP 不是什么新鲜的技术，这里就不展开介绍了。WebFlux 是基于 Reactive Streams 构建的一整套新的响应式编程模型，并提供像 WebClient 响应式的客户端，对标的是 Spring MVC 模块。</p>
<p>在 RP 模型下，务必要保证整个流程的异步性，如果一个 Callback 堵塞会直接影响到整系统，但目前大多数的 JAVA 库都是阻塞模型的，虽然 Spring 这次带来了一整套的响应式技术栈，但 JDBC 这种阻塞模型还没有得到支持（阿里内部通过 JVM 的 Wisp 协程技术解决此类问题，并基于 RX Java 也实现了一整套的 RP 模型框架），希望 Spring Data Reactive 也可以早日解决。</p>
<p>还有其他一些特性例如 HTTP/2 的支持、Actuator 模块的增强、Quartz 模块的支持等更多特性大家可以查阅官方文档。</p>
<p>除了新特性还有其他一些有意思的改动，或许算是技术方向的指引？</p>
<ul>
<li><strong>Lettuce 替代 Jedis</strong></li>
<li><strong>Caffeine 替代 Guava</strong></li>
<li><strong>HikariCP 替代 Tomcat Pool</strong></li>
</ul>
<p>市面上常用的 Redis Client 除了 Jedis 还有 Lettuce 和 Redisson，两者都是基于 Netty 实现，并也都支持了响应式的 API，Spring 选择 Lettuce 的原因我猜测或许是因为它相对 Redisson 来说足够简单~</p>
<p>Guava Cache 是非常常用的组件，Caffeine 采用了更高效的 LRU 算法，并优化了内存使用。官方性能评测优于 Guava 10 倍左右，这应该是 Spring 放弃 Guava 的原因。Caffeine 也提供了 Guava Adapter，可以让用户无缝迁移过来，目前我们团队也逐步替换中。</p>
<p>HikariCP 一直号称是最快的连接池组件，这次变为 Spring Boot 默认组件算是官方对它的认可了。雪球团队一直使用 Druid 连接池，主要是因为它在监控方面做的很全面，插件很多，还经过了国内诸多大厂的全面“测试”，使用起来较顺手。</p>
<h5 id="升级过程">升级过程</h5><p>对于过于老旧的版本，官方建议的是先升级到 1.5 作为跳板再升级到 2.0。但我们的做法比较激进, 也导致涉及依赖包的升级，配置的变动，及代码层面的改动非常之多，在提交上线的 PR 时改动文件有 250+，看到还挺惊讶。</p>
<p>这里推荐几个组件，利用好 starters 可以有效减少依赖包的管理难度</p>
<ul>
<li>spring-boot-starter-json</li>
<li>spring-boot-starter-test</li>
<li>spring-boot-starter-cache</li>
</ul>
<p>这几个官方组件支持了一些常用的模块，例如 jackson，测试的 JUnit、mockito 及常用的 cache manager 支持等。</p>
<p>配置层面也有许多变化，重构了很多 key 结构，也提供了 spring-boot-properties-migrator 模块来协助迁移。 并提供了更松散的绑定规则（破折号，驼峰，下划线），但建议在 .properties 和 .yml 文件中使用小写字母+破折号规范（个人建议所有配置都使用这个标准）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">#老配置</div><div class="line">multipart.maxFileSize=1M</div><div class="line">#新规范</div><div class="line">spring.servlet.multipart.max-file-size=1M</div></pre></td></tr></table></figure>
<p>以上这些改动虽然非常多但较容易发现，或是编译失败或无法启动。整个升级过程中最可怕的是一些隐性的风险，非常容易忽略。</p>
<h6 id="Path_Matching_默认关闭后缀匹配">Path Matching 默认关闭后缀匹配</h6><p>在以前你可以任意修改路径后缀名都能得到正确的解析，例如 /fund/000961.xyz 也能正确解析到 /fund/000961。但是 2.0 默认禁止了后缀匹配模式，这也是 Spring 的官方建议。</p>
<p>其实在做升级的过程中已经知道有这个改动，但我们团队一直使用的 REST 风格不带后缀的形式，所以没太在意。但万万没想到，其他一个团队的使用了我们的开放接口，但却采用了他们自己的路径规则，加上了 .json 后缀，在以前一直稳定运行，但现在这部分接口全部挂掉。这也是整个升级过程造成的唯一线上事故，幸好及时发现修复，没有产生大的影响。</p>
<p>解决方案就是把后缀匹配打开：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">spring.mvc.pathmatch.use-suffix-pattern=true</div></pre></td></tr></table></figure>
<h6 id="新增_HTTP_PUT_Method_Filter">新增 HTTP PUT Method Filter</h6><p>在升级后的测试过程中发现部分接口明明参数正确却一直提示失败，经排查发现 PUT 类型的参数出现了数据重叠</p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/invest/<span class="number">501021</span>?<span class="keyword">pwd</span>=<span class="keyword">abc</span> -&gt; <span class="keyword">pwd</span>=<span class="keyword">abc</span>,<span class="keyword">abc</span>(后端拿到的值)</div></pre></td></tr></table></figure>
<p>随后跟踪源码 debug 发现新增了几个 Filter，其中 HttpPutFormContentFilter 用来处理 PUT 及 PATCH 的 body 传参问题（这个补丁在 1.5 版本后就已经引入并默认开启）。</p>
<p>因为浏览器 form 表单只支持 GET 与 POST 请求，所以早期的 Spring 不支持 PUT 请求使用 body 传参，正确的解决方案应该是在后端做 Method 的隐式转换。但之前并没有使用此方案，而是客户端同学把参数改成以 param 传递，这本身没有太大问题，但却忘记了把 body 里参数去掉，在新版本就变成了重名参数，以字符数组接收（数值类的不受影响）</p>
<p>解决方案是暂时关闭这个 Filter，待客户端修复后，在未来不再支持这些有问题的老版本客户端时再打开：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">spring.mvc.formcontent.putfilter.enabled=false</div></pre></td></tr></table></figure>
<h6 id="Swagger_官方不支持_Spring_Boot_2-0">Swagger 官方不支持 Spring Boot 2.0</h6><p>在做完了所有的升级后发现 Swagger 无法使用，去官方 repo 寻求方案，发现有人已经问过了，官方回应暂不支持 2.0 版本😱。幸好在其他帖子内发现有人说使用成功，但没有给出清晰的解决方案，只好自己一点点摸索了，好在最终还是解决了。</p>
<p>方案是去除老的 security 配置以及添加部分资源的映射</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">addResourceHandlers</span><span class="params">(ResourceHandlerRegistry registry)</span> </span>&#123;</div><div class="line">    registry.addResourceHandler(<span class="string">"swagger-ui.html"</span>)</div><div class="line">            .addResourceLocations(<span class="string">"classpath:/META-INF/resources/"</span>);</div><div class="line">	registry.addResourceHandler(<span class="string">"/webjars/**"</span>)</div><div class="line">            .addResourceLocations(<span class="string">"classpath:/META-INF/resources/webjars/"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h5 id="总结">总结</h5><p>本次升级涉及十多个子系统模块，从开发-&gt;测试-&gt;灰度-&gt;上线大概 3 周多时间，除了上面引发的小事故外整个升级过程比预期要顺利很多，总结下经验有以下几点</p>
<ul>
<li><strong>对系统代码及方案足够的熟悉</strong></li>
<li><strong>不要只看升级指南，要详读官方文档</strong></li>
<li><strong>有较大块的时间及足够细心</strong></li>
</ul>
<p>有些人因为担心风险而不愿意升级，觉得够用就行。但在我看来合理的升级是必要的，收益也是显而易见的，只要使用了正确的升级方法，大部分风险还是可控的。对于升级这件事来说，时间越久，版本差异越大意味着风险也越高，制定合适的升级周期也能有效的降低风险。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>雪球内部很早就开始尝试使用 Spring Boot，我们团队是第一批吃螃蟹的人（使用的版本是 v1.2.4，发布于 2015 年中）。到目前 Spring Boot 已经成为公司内普及的基础底层框架，但各个团队之间使用上并不统一，1.2、1.3、1.5 版本都有在使用，也引]]>
    </summary>
    
      <category term="spring-boot" scheme="http://xxxx.ooo/tags/spring-boot/"/>
    
      <category term="tech" scheme="http://xxxx.ooo/categories/tech/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[产品汪忙碌的一天]]></title>
    <link href="http://xxxx.ooo/2018/the-product-manager/"/>
    <id>http://xxxx.ooo/2018/the-product-manager/</id>
    <published>2018-03-19T14:43:08.000Z</published>
    <updated>2018-06-06T11:53:51.000Z</updated>
    <content type="html"><![CDATA[<p>小李是一枚资深产品汪，工作五年多，过着平凡充实的生活，偶尔也反思一下，什么时候能财务自由，迎娶白富美，走向人生巅峰呢？</p>
<p>有一天领导找来了小李…</p>
<p>领导：你看某某公司这个功能不错，吸了很多新用户，我们可以考虑做一下</p>
<p>小李：恩，是的，不过我们这个版本需求满了，可以加在下月的版本迭代中</p>
<p>经过半个多月的深度学（chao）习（xi），脑海中反复的迭代构思，小李终于想出一个绝佳的方案，一定能让老板满意。</p>
<h6 id="3-30_周五_10：00">3-30 周五 10：00</h6><p>小李：来来来，我们开下个月的需求评审会，确定一下这个版本的需求</p>
<p>（会上大家<strong>非常踊跃，天马行空</strong>的提出了各自的想法和意见。）</p>
<p>B：这个需求看起来简单，为了保证通用性和稳定性，改动并不小，需要仔细的考虑下模块的设计。</p>
<p>D：这个功能确实不错，但是不太容易加入到我们目前视觉设计中，可能要想想其他办法</p>
<p>F：我建议引入 H5，这样更加的容易扩展和维护，这样APP的代码也不会太臃肿。</p>
<p>C：引入需谨慎啊，这样会影响测试的便利性</p>
<p>O：其实我觉得这个功能应该换一个方式可能更好…（此处省略500字），这样用户更容易理解，运营也更容易出效果</p>
<p>F：我觉得 O 的提议不错，这样前端目前的模块已经可以支持了</p>
<p>B：都可以，反正我们后端设计上都兼容，至于效果好坏可能还得调研下，可以做个 A/B Test</p>
<p>D：对了，这个输入的地方情况很多，如何给用户提示要仔细设计，不然体验非常不好</p>
<p>小李：是的，应该是弹框提醒吧</p>
<p>F：这不行，到处弹框太恶心了，给个 Toest 得了</p>
<p>D：重要信息还得弹啊，不然不够明显</p>
<p>A：不要在输入的时候主动发请求，让用户自主点击后再触发验证弹框，减少服务端压力</p>
<p>大家还在紧张的讨论中，小李一看手表，不知不觉快12点了，公司食堂要开饭了。</p>
<p>小李：好了，这次只是先让大家了解下需求，具体细节做的时候再讨论，吃饭吧。</p>
<h6 id="13:10">13:10</h6><p>饭后准备睡一会儿整理下混乱的大脑…</p>
<h6 id="14:00">14:00</h6><p>哇啦哇啦哦哇啦… 叫醒闹钟准时响起。下午大家各自进入到紧张的工作中，小李准备把下个迭代内容细化一下…</p>
<p>C: 李哥，这个需求需要你确定一下，功能上和需求文档不太一致</p>
<p>小李：好的，这不对吧，这俩处的文案需要不同，效果不一样</p>
<p>C：工程师说这样不行，结构上不统一，不好处理</p>
<p>B：你不能这么处理，一样的数据各处展现不一致，这没法处理，不能做成一致吗？</p>
<p>小李：em…我找设计同学来问问吧</p>
<p>D：这不行，外面这个宽度不适合这么长，太影响美观了</p>
<p>F：不能因为美观去改数据结构啊，这模块都不能抽象了！</p>
<p>小李：对，这里没必要放那么长</p>
<p>O：一个数据不同地方名称不一样，显得也太不专业了吧</p>
<p>B：那不然把里面的数据改成短的吧，这样就一致了</p>
<p>D：这样也行，短的大家应该也能理解吧？</p>
<p>F：可以的可以的，这样好</p>
<p>小李：……那就都改短吧。</p>
<p>说完手机传来嗡嗡声「15:06 luckin 送您一张2折优惠券，仅限今日哟」，去喝杯 coffee 冷静一下…</p>
<p>F/C/D/B：帮我带一杯，谢谢！</p>
<p>——</p>
<p>O：李哥，这产品的文案赶紧出一个，四点就上线推广了，还有十分钟！</p>
<p>小李：噢，好的，就写「内有红包，点击领取」吧。</p>
<p>O：这样不行，有合规问题，不能出现红包字眼</p>
<p>小李：「点我观看有奖励！」这个如何</p>
<p>O：不太专业，我觉得「学习小知识，领取奖学金」不错，还有内涵。</p>
<p>小李：恩，那这个吧</p>
<p>…</p>
<p>O：推广效果还不错，才半个小时有一百多个用户点击了呢！</p>
<p>小李：购买用户呢？</p>
<p>O：不太理想，只有三个</p>
<p>小李：持续观察吧，我先去听个内部分享</p>
<h6 id="17:50">17:50</h6><p>领导：小李，来我们开个会，对下当前进度和下个版本需求</p>
<p>小李：好…</p>
<h6 id="19:00">19:00</h6><p>会后室友来短信「今天我加班，记得早点回去遛狗，今天它有点拉肚子，多在外面待会儿…」</p>
<p>小李：同学们，明天上午我们进行这版本效果演示，都准备一下，家里有事先撤了…</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>小李是一枚资深产品汪，工作五年多，过着平凡充实的生活，偶尔也反思一下，什么时候能财务自由，迎娶白富美，走向人生巅峰呢？</p>
<p>有一天领导找来了小李…</p>
<p>领导：你看某某公司这个功能不错，吸了很多新用户，我们可以考虑做一下</p>
<p>小李：恩，是的，不过]]>
    </summary>
    
      <category term="产品经理" scheme="http://xxxx.ooo/tags/%E4%BA%A7%E5%93%81%E7%BB%8F%E7%90%86/"/>
    
      <category term="life" scheme="http://xxxx.ooo/categories/life/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[利用 IFTTT 解决多卡多机]]></title>
    <link href="http://xxxx.ooo/2017/how-to-manage-multi-phone/"/>
    <id>http://xxxx.ooo/2017/how-to-manage-multi-phone/</id>
    <published>2017-11-06T15:50:52.000Z</published>
    <updated>2018-06-06T08:17:27.000Z</updated>
    <content type="html"><![CDATA[<p>随着移动互联网的迅猛发展，对手机流量的需求越来越强。联通近两年推出了各种互联网套餐，吞噬了大批的用户。我作为一个资深移动老用户也办了张「大王卡」。 在联通刚推出3G业务，而移动由于自身原因只能使用2G的时期我都忍住没有迁移至联通，但现在我几乎要离开移动了。日常使用全部大王卡，移动只有接收银行等重要信息、验证码等功能。姑且还称移动为主卡，联通为副卡吧。</p>
<p>如果手机不支持双卡双待，多卡带来的问题就是得多备一个手机，多花钱不说还得天天带着。对于我这种 iPhone党简直是噩梦，势必要解决它</p>
<p>需要解决的有俩部分</p>
<p>1.电话：主卡电话呼叫转移到副卡</p>
<p>2.短信： 希望把主卡短信全部转发到副卡上</p>
<h5 id="呼叫转移">呼叫转移</h5><p>目前大部分智能手机已系统支持呼叫转移，注意的是，这部分是需要另付资费哦例如A/B俩卡都是免费接听，但如果 A 转接到 B 需要收取 A 的呼叫费用</p>
<h5 id="使用_IFTTT_解决短信转发">使用 IFTTT 解决短信转发</h5><p>要解决短信的转移前提是能获取到本机短信的权限，iOS 因为隐私保护暂时做不到，所以<strong>需要一台Android 手机</strong>供主卡使用，如果是小米还需要在安全中心里给 IFTTT 开启读取服务类短信，不然无法收到银行验证码等。</p>
<p><strong>建议使用 Google Play 版本的 IFTTT</strong>（需翻墙）</p>
<p>下面表格列出邮件、Telegram、微信三种方案各自优缺点。<strong>个人推荐使用微信</strong>，毕竟每天都使用，更加习惯。</p>
<table>
<thead>
<tr>
<th>转发方案</th>
<th>优点</th>
<th>缺点</th>
</tr>
</thead>
<tbody>
<tr>
<td>邮件</td>
<td>配置简单，稳定</td>
<td>响应稍慢</td>
</tr>
<tr>
<td>Telegram</td>
<td>安全，及时</td>
<td>俩个手机都需要翻墙</td>
</tr>
<tr>
<td>微信</td>
<td>习惯，及时</td>
<td>需要第三方推送服务</td>
</tr>
</tbody>
</table>
<p>具体配置方法都很简单，就不详述了。推送到微信要配置成 Webhooks 的方式，推荐 <a href="http://sc.ftqq.com/" target="_blank" rel="external">Server酱</a> 服务，绑定下微信就可以收到推送啦。</p>
<h5 id="其他">其他</h5><p>其实还有个更简单的方案，就是使用 IFTTT 自身APP。俩部手机都下载 IFTTT 并用同一个账号登录，打开 Applets 的推送即可~</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>随着移动互联网的迅猛发展，对手机流量的需求越来越强。联通近两年推出了各种互联网套餐，吞噬了大批的用户。我作为一个资深移动老用户也办了张「大王卡」。 在联通刚推出3G业务，而移动由于自身原因只能使用2G的时期我都忍住没有迁移至联通，但现在我几乎要离开移动了。日常使用全部大王卡]]>
    </summary>
    
      <category term="IFTTT" scheme="http://xxxx.ooo/tags/IFTTT/"/>
    
      <category term="tech" scheme="http://xxxx.ooo/categories/tech/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[使用 Lombok 遇到的坑]]></title>
    <link href="http://xxxx.ooo/2017/using-lombok/"/>
    <id>http://xxxx.ooo/2017/using-lombok/</id>
    <published>2017-03-16T10:39:03.000Z</published>
    <updated>2019-10-18T00:55:31.348Z</updated>
    <content type="html"><![CDATA[<p>Lombok的主旨是提高开发效率，消除冗长的 JAVA 代码，尤其是 POJO 类型。在开发初期 POJO 经常修改，随之涉及到改动 getter/setter/toString 等一系列方法。虽然现在 IDE 都能自动生成对应代码，但还是需要手动删除重新生成。</p>
<p>它的原理是在编译期操作 AST(抽象语法树) 去改变字节码，根据注解生成对应的代码。因为在静态编译期做的，相对可控，使用也简单。</p>
<blockquote>
<p>Google 开源的 AutoValue 也是用来解决这个问题，功能很全面，还可以定制化。但有一些的问题</p>
<ol>
<li>代码侵入重，所有定义的对象是抽象类，使用都是封装后的 AutoValue_XXX </li>
<li>生成的 POJO 都是 immutable 的，需要频繁操作的类会很麻烦。</li>
</ol>
</blockquote>
<h6 id="在使用_Lombok_期间遇到一个坑">在使用 Lombok 期间遇到一个坑</h6><p>当你的 POJO 中出现单字母驼峰名称时，例如：iType，Lombok生成出来的 getter/setter 方法</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> String iType;</div><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getIType</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> iType;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setIType</span><span class="params">(String iType)</span> </span>&#123;</div><div class="line">    <span class="keyword">this</span>.iType = iType;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>乍一看没啥问题，但是影响很严重，首先 Spring 是不认此方法的，其次也影响到 Jackson 的解析，直接导致无法使用</p>
<p>一般来说，代码规范和 API 规范有所区别，参考之前的文章「<a href="/2016/about-api-design/">浅谈 Api 设计</a>」。从后端输出 Api 时会做一些转换，例如驼峰转小写+下划线格式，这个 Jackson 有对应支持</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">Jackson2ObjectMapperBuilder.propertyNamingStrategy(PropertyNamingStrategy.CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES)</div><div class="line"><span class="comment">//Jackson 也是通过 get 方法来获取属性</span></div><div class="line"><span class="comment">//我们的预期是 </span></div><div class="line">iType -&gt; i_type</div><div class="line"><span class="comment">//而结果是 </span></div><div class="line">IType -&gt; itype</div></pre></td></tr></table></figure>
<p>开始我觉得这是 Lombok 的 bug，随后我下载了 Lombok 的源码来验证</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//HandlerUtil 类统一处理方法名</span></div><div class="line"><span class="comment">//可以看到规则是如果首字母小写，长度大于2并且第二个字母是大写或者是 titlecase 的话，则把首字母变大写。</span></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * <span class="doctag">@param</span> prefix Something like &#123;<span class="doctag">@code</span> get&#125; or &#123;<span class="doctag">@code</span> set&#125; or &#123;<span class="doctag">@code</span> is&#125;.</div><div class="line">     * <span class="doctag">@param</span> suffix Something like &#123;<span class="doctag">@code</span> running&#125;.</div><div class="line">     * <span class="doctag">@return</span> prefix + smartly title-cased suffix. For example, &#123;<span class="doctag">@code</span> setRunning&#125;.</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">buildAccessorName</span><span class="params">(String prefix, String suffix)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (suffix.length() == <span class="number">0</span>) <span class="keyword">return</span> prefix;</div><div class="line">        <span class="keyword">if</span> (prefix.length() == <span class="number">0</span>) <span class="keyword">return</span> suffix;</div><div class="line">        </div><div class="line">        <span class="keyword">char</span> first = suffix.charAt(<span class="number">0</span>);</div><div class="line">        <span class="keyword">if</span> (Character.isLowerCase(first)) &#123;</div><div class="line">            <span class="keyword">boolean</span> useUpperCase = suffix.length() &gt; <span class="number">2</span> &amp;&amp;</div><div class="line">                (Character.isTitleCase(suffix.charAt(<span class="number">1</span>)) || Character.isUpperCase(suffix.charAt(<span class="number">1</span>)));</div><div class="line">            suffix = String.format(<span class="string">"%s%s"</span>,</div><div class="line">                    useUpperCase ? Character.toUpperCase(first) : Character.toTitleCase(first),</div><div class="line">                    suffix.subSequence(<span class="number">1</span>, suffix.length()));</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> String.format(<span class="string">"%s%s"</span>, prefix, suffix);</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>显然这是特意而为之，随后我上官方 issue 中看了下，在15年已经有人提出了这个问题，而官方的答复是 Java Bean 的规范就是如此，且不应该使用首字母小写第二个字符大写的命名规则，Spring 的处理方式是自己发明的，我们不能跟着 Spring 乱搞，如果 Oracle 官方推荐如此或者所有人都是这么处理的话我们才改~</p>
<p><img src="http://img.imim.me/2016/9/x2jea.png" alt=""></p>
<p>虽然我没有仔细的看过 Bean 规范，但如果 Spring 这么大厂都不支持的话会很难推广，在我刚和同事推荐的时候大家都非常激动，一听有这么个坑几乎都放弃了，也许是 xXxx 这种命名非常常见吧，比如 iPhone……</p>
<p>不光 Spring，Jackson，编译器（ IDEA）自动生成的也是如此，只能说 Lombok 性格真是倔。既然如此只好自己修改下源码了…</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//好在改动也非常小， 规则改为：长度大于2，并且第二个字母是大写则不转换大写</span></div><div class="line"><span class="keyword">boolean</span> useUpperCase = suffix.length() &gt; <span class="number">2</span> &amp;&amp; Character.isUpperCase(suffix.charAt(<span class="number">1</span>));</div><div class="line"></div><div class="line">suffix = String.format(<span class="string">"%s%s"</span>, useUpperCase ? first : Character.toTitleCase(first),</div><div class="line">                    suffix.subSequence(<span class="number">1</span>, suffix.length()));</div></pre></td></tr></table></figure>
<p>PS：据官方说从 JAVA 讨论组数据统计，半数多人支持 getxXxx() 的做法。但他们大多数人的选择未必是正确的做法~</p>
<p>啊呸…</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Lombok的主旨是提高开发效率，消除冗长的 JAVA 代码，尤其是 POJO 类型。在开发初期 POJO 经常修改，随之涉及到改动 getter/setter/toString 等一系列方法。虽然现在 IDE 都能自动生成对应代码，但还是需要手动删除重新生成。</p>
<]]>
    </summary>
    
      <category term="java" scheme="http://xxxx.ooo/tags/java/"/>
    
      <category term="lombok" scheme="http://xxxx.ooo/tags/lombok/"/>
    
      <category term="tech" scheme="http://xxxx.ooo/categories/tech/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[北海道滑雪不完全指南]]></title>
    <link href="http://xxxx.ooo/2017/ski-in-hokkaido/"/>
    <id>http://xxxx.ooo/2017/ski-in-hokkaido/</id>
    <published>2017-01-16T12:41:12.000Z</published>
    <updated>2019-10-18T00:55:31.346Z</updated>
    <content type="html"><![CDATA[<p>北海道雪场非常多，二世谷、留寿都、札幌国际等诸多著名雪场，前年公司年会去的时候傻逼的被导游带去玩雪橇错过了留寿都的体验，据同事反馈也是相当的好。后面去了札幌国际玩了一天，体验也还不错。今年首次自带装备去滑雪，前期做了不少功课。</p>
<p><img src="http://img.imim.me/2016/9/k9vtb.png" alt=""></p>
<h5 id="自带板的一些注意事项">自带板的一些注意事项</h5><ul>
<li>装备托运：滑雪板属于超规行李，需要特殊办理托运。事先了解航空公司对运动类大件物件的处理方式，国内航空一般把重量算在了普通行李中，部分国际航空公司有免费的政策</li>
</ul>
<ul>
<li>酒店位置，背板的后果就是无法乘坐计程车， 所以酒店位置非常重要，距车站越近越好，当然价格会高一些。</li>
</ul>
<ul>
<li>酒店往返雪场巴士时刻表</li>
</ul>
<p>这次雪场的选择在 <strong>Kiroro</strong> 和 <strong>二世谷</strong>中犹豫，由于没有订上雪场内的酒店，只能选择住在较近的小樽，这里去 Kiroro 大巴约50分钟。去二世谷要坐 JR 一个多小时。最终选择了较近的 Kiroro</p>
<p>这里必须要推荐下我选择的这家酒店，Dormy Inn Premium Otaru（小樽豪华多米酒店），就在 JR 小樽站对面，下车步行约1min。旁边是大巴站，隔壁是小樽最大的商场。 店内提供洗衣房及公共温泉，重点晚上还有免费拉面吃，哈哈。（偶然发现在札幌狸小路旁边也有一家）</p>
<h5 id="KIRORO滑雪_（8_-_16点）">KIRORO滑雪 （8 - 16点）</h5><p>​    Kiroro雪场巴士有两种，一种免费的巴士到小樽驻港站，一种收费到达JR小樽站，都需要预约，因为座位有限，但基本坐不满。有一天我们只约到一个人，经过沟通也让我们上车了。小樽大巴早上八点十分出发，每日一班，不要迟到，不会等人。</p>
<p>​    <img src="http://img.imim.me/2016/9/idito.png" alt="Kiroro"></p>
<p>​    </p>
<p>​    正逢圣诞节，雪场也搞了一些活动。在日本没有滑雪票的概念， 只有Lift price(缆车费) 和Rental price（租赁费用）。自带装备的话只需购买缆车费，根据年龄和时长价格不一，这次我们买的是3天联票（含夜场），折合人民币850左右，是不是比国内还便宜？</p>
<p><img src="http://img.imim.me/2016/9/owc9d.png" alt=""></p>
<p>会发一张实名卡乘缆车用，印有你的个人信息，遇到问题能迅速找到你的资料，理论上只限本人使用。</p>
<p><img src="http://img.imim.me/2016/9/34g4h.png" alt=""></p>
<p>Kiroro 雪场由两座山头组成，最长的雪道(Asari Dynamic) 4km 左右，覆盖初中高级雪道，也是人最多的雪道，缺点就是中午后雪就不粉了。我更爱的是最右侧的 Asari Course ，人烟稀少，大粉雪。</p>
<p><img src="http://img.imim.me/2016/9/1gqtz.png" alt=""></p>
<p>Asari 山顶雪季非常的美，像这样。</p>
<p><img src="http://img.imim.me/2016/9/1j71q.JPG" alt=""></p>
<p>也可以这样</p>
<p><img src="http://img.imim.me/2016/9/bcdpk.png" alt=""></p>
<p>第一天下午四点左右暴风雪就开始来了，山顶雪雾大到戴着雪镜只能看到一片白茫茫，当时在高级道的我吓的不太敢滑，害怕冲到树林里的深雪堆里爬不出来。加上只穿了一件保暖内衣和软壳，感觉异常的冷~ 下山就收包返程了</p>
<p><img src="http://img.imim.me/2016/9/tb8i9.png" alt="Asari Course"></p>
<h5 id="吃饭逛街（18-21点）">吃饭逛街（18-21点）</h5><p>​    在小樽基本没有夜生活。六点多我们去觅食已经很多店关门了，有些出名的店还要预定，真是难死我们了~ 饭后就开启了买买买节奏</p>
<p><img src="http://img.imim.me/2016/9/gpik8.png" alt=""></p>
<h5 id="温泉&amp;拉面（21-23点）">温泉&amp;拉面（21-23点）</h5><p>​    运动一天后泡个温泉简直不能再爽，泡饿了再干它两碗免费拉面（拉面23点截止，千万别泡过头了）温泉图片就不放了….</p>
<p>​     提示：女汤需要凭密码进入哦，密码每天都更换，记得找前台要。</p>
<h5 id="最后遗憾">最后遗憾</h5><p>恰好那几天北海道遭遇大暴雪，缺点就是天气不好，也比较冷，好处是雪真是松软到不行，雪场下午都放弃压雪了，雪道内和野雪一样棉花糖似得脚感，趁最后一天天气晴朗拍了个视频，可惜已经没有棉花糖的雪了~</p>
<iframe frameborder="0" width="100%" height="480" src="https://v.qq.com/iframe/player.html?vid=q03657b9jl1&tiny=0&auto=0" allowfullscreen></iframe>

<p><strong>PS</strong>：在北海道遇到了几个热心的台湾人，解决了一些沟通问题，买 JR 函馆站的一位台湾姐姐带我们到售票厅中买到了更实惠的往返联程票，在雪场丢失了一台 wifi 设备也是一位台湾 MM 帮我们做了相关的登记（虽然最终也没有找回来）</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>北海道雪场非常多，二世谷、留寿都、札幌国际等诸多著名雪场，前年公司年会去的时候傻逼的被导游带去玩雪橇错过了留寿都的体验，据同事反馈也是相当的好。后面去了札幌国际玩了一天，体验也还不错。今年首次自带装备去滑雪，前期做了不少功课。</p>
<p><img src="http:/]]>
    </summary>
    
      <category term="滑雪" scheme="http://xxxx.ooo/tags/%E6%BB%91%E9%9B%AA/"/>
    
      <category term="北海道" scheme="http://xxxx.ooo/tags/%E5%8C%97%E6%B5%B7%E9%81%93/"/>
    
      <category term="life" scheme="http://xxxx.ooo/categories/life/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[充值信仰]]></title>
    <link href="http://xxxx.ooo/2016/cost-for-faith/"/>
    <id>http://xxxx.ooo/2016/cost-for-faith/</id>
    <published>2016-10-11T14:48:54.000Z</published>
    <updated>2019-10-18T00:55:31.342Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p><strong>信仰</strong>（英语：Faith）是指對一個人（同樣的對他的能力）、事物、神、宗教的教條或教導、沒有經驗證據的觀點（例如擁有強烈的政治信仰）抱有信心和信任    —wikipedia</p>
</blockquote>
<p>如今「信仰」在网络上也被大家用来形容自己对某件事物的热爱，例如信仰是 Google，必须使用 Google 的全套服务，不论是否好用。手机要用亲儿子Nexus（即将变为 Pixel）。锤子的情怀、Apple 的果粉，都算是一种信仰。</p>
<p>今天收到了「信仰之盾」，其实是 Dota2 内的一款纪念品，每逢大比赛前会推出小本子供玩家购买，本子等级越高可以收获更多的饰品，不乏有一些极其珍惜的物品。当然想要本子等级高可以花更多的钱，今年的<strong>第六届国际邀请赛</strong>（最大的一场比赛，简称 Ti6）出了新的花样，达到 1000 级的玩家可以收获实体冠军盾一枚，这手段无非就是促使玩家买买买。</p>
<p>尽管知道是在「骗钱」，还是跳下了火坑，充值信仰。庆幸的是今年在大家心灰意冷的时候，一匹中国黑马拿到了久违的冠军，拿到史上最高奖励 $912w 约 6000 多万人民币，也算自己出了一份力。</p>
<p><img src="http://img.imim.me/2016/9/8d5vm.png" alt="Wings"></p>
<p>实物上手图，我这批应该是九月第一批发货的。做工也还不错，比较精致但边缘有点瑕疵</p>
<p><img src="http://img.imim.me/2016/9/53eor.JPG" alt="正面"></p>
<p><img src="http://img.imim.me/2016/9/kxsn9.JPG" alt="背面"></p>
<p><img src="http://img.imim.me/2016/9/zqucb.JPG" alt="透明隔层"></p>
<p><img src="http://img.imim.me/2016/9/5hwd7.JPG" alt=""></p>
<p><img src="http://img.imim.me/2016/9/b174o.JPG" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p><strong>信仰</strong>（英语：Faith）是指對一個人（同樣的對他的能力）、事物、神、宗教的教條或教導、沒有經驗證據的觀點（例如擁有強烈的政治信仰）抱有信心和信任    —wikipedia</p>
</blockquote>
<p]]>
    </summary>
    
      <category term="游戏" scheme="http://xxxx.ooo/tags/%E6%B8%B8%E6%88%8F/"/>
    
      <category term="Dota2" scheme="http://xxxx.ooo/tags/Dota2/"/>
    
      <category term="life" scheme="http://xxxx.ooo/categories/life/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[程序员认知]]></title>
    <link href="http://xxxx.ooo/2016/what-is-coder/"/>
    <id>http://xxxx.ooo/2016/what-is-coder/</id>
    <published>2016-09-06T15:21:12.000Z</published>
    <updated>2019-10-18T00:55:31.349Z</updated>
    <content type="html"><![CDATA[<p>目前市面上对程序员有几种认知<br>普遍认知：格子衬衫、牛仔裤、运动鞋、黑色双肩包<br>偏见认知：闷骚、宅男、不会聊天<br>深度认知：聪明、上进、有信仰和情怀<br>极度认知：钱多话少死得早，当老公不二人选</p>
<p>有一次我跟长辈们出去吃饭，桌上一位做 IT 周边行业的叔叔问我，说你们赚多少钱一个月啊。我说没多少，万八千的。叔叔说那肯定得天天加班到半夜吧。<br>我：o(︶︿︶)o ……</p>
<blockquote>
<p>我司虽然是互联网公司，但很少加班，还享受互联网公司各种福利待遇… 有兴趣的同学可以联系（<a href="https://xueqiu.com/about/jobs" target="_blank" rel="external">相关职位信息</a>）</p>
</blockquote>
<p><strong>福利</strong><br>我司码农日常工作图！拖拉板、大裤衩、MacBook Pro、iPhone、机械键盘，不拘一格，不修边幅。</p>
<p><img src="http://img.imim.me/2016/9/IMG_2124.JPG" alt="码农日常"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>目前市面上对程序员有几种认知<br>普遍认知：格子衬衫、牛仔裤、运动鞋、黑色双肩包<br>偏见认知：闷骚、宅男、不会聊天<br>深度认知：聪明、上进、有信仰和情怀<br>极度认知：钱多话少死得早，当老公不二人选</p>
<p>有一次我跟长辈们出去吃饭，桌上一位做 IT 周边]]>
    </summary>
    
      <category term="程序员" scheme="http://xxxx.ooo/tags/%E7%A8%8B%E5%BA%8F%E5%91%98/"/>
    
      <category term="life" scheme="http://xxxx.ooo/categories/life/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[韩式美妆教学]]></title>
    <link href="http://xxxx.ooo/2016/beauty-makeup-han/"/>
    <id>http://xxxx.ooo/2016/beauty-makeup-han/</id>
    <published>2016-08-20T14:21:12.000Z</published>
    <updated>2017-03-17T10:55:25.000Z</updated>
    <content type="html"><![CDATA[<p>某个周末无聊的举动，第一次动手，图个乐呵……</p>
<iframe height="480" width="100%" src="http://player.youku.com/embed/XMTU5MjI2ODU5Mg==" frameborder="0" 'allowfullscreen'=""></iframe>]]></content>
    <summary type="html">
    <![CDATA[<p>某个周末无聊的举动，第一次动手，图个乐呵……</p>
<iframe height="480" width="100%" src="http://player.youku.com/embed/XMTU5MjI2ODU5Mg==" frameborder="0" 'allow]]>
    </summary>
    
      <category term="原创视频" scheme="http://xxxx.ooo/tags/%E5%8E%9F%E5%88%9B%E8%A7%86%E9%A2%91/"/>
    
      <category term="life" scheme="http://xxxx.ooo/categories/life/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[墨菲定律]]></title>
    <link href="http://xxxx.ooo/2016/murphy-law/"/>
    <id>http://xxxx.ooo/2016/murphy-law/</id>
    <published>2016-07-26T15:21:12.000Z</published>
    <updated>2016-09-06T12:40:20.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>墨菲定律：可能会出错的地方一定会出错，如果有多个可能，必定朝最坏的情况发展。大俗话：明明之前没有错，偏偏关键时刻就是出错了  —wikipedia</p>
</blockquote>
<p>这是这两天遇到线上事故的总结</p>
<h5 id="事故过程：">事故过程：</h5><p>早前做了一个系统维护的解决方案，目的阻挡一些涉及维护系统的请求，避免造成数据上的错误。但因业务的扩展，并且多次升级维护都比较顺利，此方案并没有更新覆盖到一些新业务。</p>
<p><strong>升级的过程为：停服务-&gt; 备份数据库 -&gt; 升级服务 -&gt; 重启服务</strong></p>
<p>升级后上线测试业务失败，经过半小时检测未找到原因（事后查出是三方升级包BUG，部分用户可以成功）。随后进行回滚操作，回滚后出现系统数据同步异常，检测发现在维护期间有部分新数据写入，回滚导致部分数据丢失。</p>
<p>好在没有对用户造成经济上的损失，但修数据耗费了大家一整天时间。</p>
<h5 id="主要原因：">主要原因：</h5><ol>
<li>维护方案不是最新，但每次维护都在使用</li>
<li>升级后未经过灰度直接上线测试</li>
<li>线上测试发现问题后未检测是否有新数据就进行回滚</li>
<li>三方提供的升级包质检不合格</li>
</ol>
<p>又一次用血泪印证了墨菲定律。</p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>墨菲定律：可能会出错的地方一定会出错，如果有多个可能，必定朝最坏的情况发展。大俗话：明明之前没有错，偏偏关键时刻就是出错了  —wikipedia</p>
</blockquote>
<p>这是这两天遇到线上事故的总结</p>
<h5 id="事故]]>
    </summary>
    
      <category term="墨菲定律" scheme="http://xxxx.ooo/tags/%E5%A2%A8%E8%8F%B2%E5%AE%9A%E5%BE%8B/"/>
    
      <category term="工作" scheme="http://xxxx.ooo/tags/%E5%B7%A5%E4%BD%9C/"/>
    
      <category term="tech" scheme="http://xxxx.ooo/categories/tech/"/>
    
  </entry>
  
</feed>