<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  
  <title><![CDATA[擦擦擦擦]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://xxxx.ooo//"/>
  <updated>2016-09-06T16:58:38.000Z</updated>
  <id>http://xxxx.ooo//</id>
  
  <author>
    <name><![CDATA[山荣]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[互联网程序员]]></title>
    <link href="http://xxxx.ooo/2016/09/06/%E4%BA%92%E8%81%94%E7%BD%91%E7%A8%8B%E5%BA%8F%E5%91%98/"/>
    <id>http://xxxx.ooo/2016/09/06/互联网程序员/</id>
    <published>2016-09-06T15:21:12.000Z</published>
    <updated>2016-09-06T16:58:38.000Z</updated>
    <content type="html"><![CDATA[<p>说到程序员目前有几种认知<br>普遍认知：网上疯传的格子衬衫、牛仔裤、运动鞋、黑色双肩包<br>偏见认知：闷骚，宅男， 不会聊天<br>深度认知：有追求、上进、当老公不二人选</p>
<p>上面说的都对… 但是程序员也分很多种，有一种叫「互联网程序员」<br>现在不混互联网圈的都不好意思说自己是程序员！<br>互联网程序员（以下简称 H）和传统程序员（以下简称 C）区别是什么？</p>
<p><strong>工作强度</strong><br>C：965，即早上 9 点上班，晚上 6 点下班，一周上班 5 天。偶尔加班<br>H：996，解释同上。工作节奏快，为了赶进度加班加点常要996。 其实很多公司都是上下班灵活制不打卡，上班时间十点十一点，不过晚下班也是常态</p>
<p><strong>工作内容</strong><br>C：银行、金融、国政企业的IT 部门，用户群小，用户体验要求较低，业务流程复杂。<br>H：面向大众的创新类产品，用户群大，用户体验要求高。高并发、大数据等等热门技术应用</p>
<p><strong>待遇</strong><br>有一次我跟长辈们出去吃饭，桌上一位做 IT 周边行业的叔叔问我，说你们赚多少钱一个月啊。我说没多少，万八千的。叔叔说是不是得天天加班到半夜啊？<br>我：o(︶︿︶)o ……</p>
<p><strong>PS</strong>: 我司虽然是互联网公司，但很少加班，还享受互联网公司各种福利待遇… 有兴趣的同学可以联系我（<a href="https://xueqiu.com/about/jobs" target="_blank" rel="external">相关职位信息</a>）</p>
<p><strong>福利</strong><br>拖拉板、大裤衩、Macbook Pro、iPhone、机械键盘，不拘一格，不修边幅。这就是互联网程序员</p>
<p><img src="http://7xn47h.com1.z0.glb.clouddn.com/2016/9/IMG_2124.JPG" alt="coder"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>说到程序员目前有几种认知<br>普遍认知：网上疯传的格子衬衫、牛仔裤、运动鞋、黑色双肩包<br>偏见认知：闷骚，宅男， 不会聊天<br>深度认知：有追求、上进、当老公不二人选</p>
<p>上面说的都对… 但是程序员也分很多种，有一种叫「互联网程序员」<br>现在不混互联网]]>
    </summary>
    
      <category term="程序员" scheme="http://xxxx.ooo/tags/%E7%A8%8B%E5%BA%8F%E5%91%98/"/>
    
      <category term="life" scheme="http://xxxx.ooo/categories/life/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[韩式美妆教学]]></title>
    <link href="http://xxxx.ooo/2016/08/20/%E9%9F%A9%E5%BC%8F%E7%BE%8E%E5%A6%86%E6%95%99%E5%AD%A6/"/>
    <id>http://xxxx.ooo/2016/08/20/韩式美妆教学/</id>
    <published>2016-08-20T14:21:12.000Z</published>
    <updated>2016-09-06T16:26:48.000Z</updated>
    <content type="html"><![CDATA[<p>某个周末无聊的举动，第一次动手，效果还是不错的，看来有一些天分。<br>生活么，图个乐呵……</p>
<embed src="http://player.youku.com/player.php/sid/XMTU5MjI2ODU5Mg==/v.swf" allowfullscreen="true" quality="high" width="640" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash">
]]></content>
    <summary type="html">
    <![CDATA[<p>某个周末无聊的举动，第一次动手，效果还是不错的，看来有一些天分。<br>生活么，图个乐呵……</p>
<embed src="http://player.youku.com/player.php/sid/XMTU5MjI2ODU5Mg==/v.swf" allowfulls]]>
    </summary>
    
      <category term="原创视频" scheme="http://xxxx.ooo/tags/%E5%8E%9F%E5%88%9B%E8%A7%86%E9%A2%91/"/>
    
      <category term="life" scheme="http://xxxx.ooo/categories/life/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[墨菲定律]]></title>
    <link href="http://xxxx.ooo/2016/07/26/%E5%A2%A8%E8%8F%B2%E5%AE%9A%E5%BE%8B/"/>
    <id>http://xxxx.ooo/2016/07/26/墨菲定律/</id>
    <published>2016-07-26T15:21:12.000Z</published>
    <updated>2016-09-06T12:40:20.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>墨菲定律：可能会出错的地方一定会出错，如果有多个可能，必定朝最坏的情况发展。大俗话：明明之前没有错，偏偏关键时刻就是出错了  —wikipedia</p>
</blockquote>
<p>这是这两天遇到线上事故的总结</p>
<h5 id="事故过程：">事故过程：</h5><p>早前做了一个系统维护的解决方案，目的阻挡一些涉及维护系统的请求，避免造成数据上的错误。但因业务的扩展，并且多次升级维护都比较顺利，此方案并没有更新覆盖到一些新业务。</p>
<p><strong>升级的过程为：停服务-&gt; 备份数据库 -&gt; 升级服务 -&gt; 重启服务</strong></p>
<p>升级后上线测试业务失败，经过半小时检测未找到原因（事后查出是三方升级包BUG，部分用户可以成功）。随后进行回滚操作，回滚后出现系统数据同步异常，检测发现在维护期间有部分新数据写入，回滚导致部分数据丢失。</p>
<p>好在没有对用户造成经济上的损失，但修数据耗费了大家一整天时间。</p>
<h5 id="主要原因：">主要原因：</h5><ol>
<li>维护方案不是最新，但每次维护都在使用</li>
<li>升级后未经过灰度直接上线测试</li>
<li>线上测试发现问题后未检测是否有新数据就进行回滚</li>
<li>三方提供的升级包质检不合格</li>
</ol>
<p>又一次用血泪印证了墨菲定律。</p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>墨菲定律：可能会出错的地方一定会出错，如果有多个可能，必定朝最坏的情况发展。大俗话：明明之前没有错，偏偏关键时刻就是出错了  —wikipedia</p>
</blockquote>
<p>这是这两天遇到线上事故的总结</p>
<h5 id="事故]]>
    </summary>
    
      <category term="墨菲定律" scheme="http://xxxx.ooo/tags/%E5%A2%A8%E8%8F%B2%E5%AE%9A%E5%BE%8B/"/>
    
      <category term="工作" scheme="http://xxxx.ooo/tags/%E5%B7%A5%E4%BD%9C/"/>
    
      <category term="tech" scheme="http://xxxx.ooo/categories/tech/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[定制自己的健身计划]]></title>
    <link href="http://xxxx.ooo/2016/07/18/%E5%AE%9A%E5%88%B6%E8%87%AA%E5%B7%B1%E7%9A%84%E5%81%A5%E8%BA%AB%E8%AE%A1%E5%88%92/"/>
    <id>http://xxxx.ooo/2016/07/18/定制自己的健身计划/</id>
    <published>2016-07-18T10:05:35.000Z</published>
    <updated>2016-07-20T13:05:58.000Z</updated>
    <content type="html"><![CDATA[<p>刚开始健身不久，根据自己的情况定制一份适合自己的计划是很有必要的。</p>
<p>健身大多目的有两个，瘦子想变壮与胖子想变瘦（用专业的术语应该说是增肌与减脂）。 多数人都认为减肥更难，长肉还不容易么？多吃多睡呗</p>
<p>其实靠吃就能增重的人往往处于需要减脂的群体中，都是增加了脂肪，而需要增肌的人群大都是百吃不胖，也许是因为体质或者其他因素。</p>
<p>很不幸我是属于「吃不胖」群体的，体脂一直都是在10-15之间。最近去健身房测试竟然是7.x，我想这应该是机器有问题，在增重的道路上路漫漫兮…</p>
<p>这份计划也是在咨询了许多经验人士，并依据自身及场馆情况而制定，考虑场馆因素是因为一些动作是依赖相关器械的。</p>
<h4 id="计划详情：">计划详情：</h4><p><strong>目标</strong>：体重增重5-7kg，增强上肢三围及力量<br><strong>频率</strong>：3-4次/周</p>
<h5 id="胸、二头">胸、二头</h5><p>胸：史密斯卧推/哑铃卧推（上斜、水平、下斜）、蝴蝶机<br>二头：杠铃弯举、哑铃弯举、锤式弯举</p>
<h5 id="背、三头">背、三头</h5><p>背：坐姿下拉、坐姿划船、屈退硬拉<br>三头：拉力器曲臂下压、哑铃屈伸</p>
<h5 id="肩、腿">肩、腿</h5><p>三角肌：哑铃交替前举、哑铃肩上推举、反式蝴蝶机展肩<br>腿：坐姿水平蹬腿、杠铃深蹲</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>刚开始健身不久，根据自己的情况定制一份适合自己的计划是很有必要的。</p>
<p>健身大多目的有两个，瘦子想变壮与胖子想变瘦（用专业的术语应该说是增肌与减脂）。 多数人都认为减肥更难，长肉还不容易么？多吃多睡呗</p>
<p>其实靠吃就能增重的人往往处于需要减脂的群体中，都]]>
    </summary>
    
      <category term="健身" scheme="http://xxxx.ooo/tags/%E5%81%A5%E8%BA%AB/"/>
    
      <category term="健康" scheme="http://xxxx.ooo/tags/%E5%81%A5%E5%BA%B7/"/>
    
      <category term="life" scheme="http://xxxx.ooo/categories/life/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[MTM-FS-Server-Failed]]></title>
    <link href="http://xxxx.ooo/2016/06/22/MTM-FS-server-failed/"/>
    <id>http://xxxx.ooo/2016/06/22/MTM-FS-server-failed/</id>
    <published>2016-06-22T03:36:16.000Z</published>
    <updated>2016-06-22T05:09:49.000Z</updated>
    <content type="html"><![CDATA[<p>今天处理系统问题时，偶然发现 Console 里系统日志一直在打一些奇怪的错误日志，统计了下总数有 10w+ …</p>
<p> <img src="http://7xn47h.com1.z0.glb.clouddn.com/2016%2F6%2F1466566947114.png" alt="console_log"><br>猜测是哪个软件的流氓进程，直到看到最后这行日志，像是个系统备份服务。<br>mtmfs 是个啥子呢</p>
<blockquote>
<p><strong>mtmfs</strong> is the <em>Mobile Time Machine File System</em>, that handles Local snapshots, both making them and managing them (consolidating, deleting, etc).  They’re made on laptops running Lion whenever Time Machine is ON, whether you’re in range of your Time Machine backup destination or not.  These are completely separate from “normal” Time Machine backups to an external HD, Time Capsule, etc.</p>
</blockquote>
<p>Lion 以上的系统，只要打开了 Time Machine 就会启动 mtmfs 进程。查得 mtmfs 进程监听地址是 localhost ，本地 ping 发现不通。查看 /etc/hosts :<br><code>127.0.0.1 test.pay.inter.domian</code><br>原来是自己测试时把 localhost 域给改掉了，改回来即可<br><code>127.0.0.1 localhost</code></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>今天处理系统问题时，偶然发现 Console 里系统日志一直在打一些奇怪的错误日志，统计了下总数有 10w+ …</p>
<p> <img src="http://7xn47h.com1.z0.glb.clouddn.com/2016%2F6%2F1466566947114]]>
    </summary>
    
      <category term="osx" scheme="http://xxxx.ooo/tags/osx/"/>
    
      <category term="tech" scheme="http://xxxx.ooo/categories/tech/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[一封邮件的故事]]></title>
    <link href="http://xxxx.ooo/2016/02/29/%E4%B8%80%E5%B0%81%E9%82%AE%E4%BB%B6%E7%9A%84%E6%95%85%E4%BA%8B/"/>
    <id>http://xxxx.ooo/2016/02/29/一封邮件的故事/</id>
    <published>2016-02-29T14:28:00.000Z</published>
    <updated>2016-03-20T14:42:04.000Z</updated>
    <content type="html"><![CDATA[<p>下午收到封邮件，标题是沉痛哀悼xxxx，差点吓尿… 原来是哀悼之前的项目下线。引发了很多的回忆…<br>两年前加入雪球时写了篇十个字博客，今天就来完成那篇文章吧<br>Snowball 是雪球的「核心」项目（从名字就能看出来），就像歌手出道喜欢发行同名专辑一样。也是因为这个项目，雪球在「互联网金融」领域崭露头角。<br><img src="http://7xn47h.com1.z0.glb.clouddn.com/2016%2F2%2F1456759177888.png" alt="email"></p>
<h4 id="第一次上线事故">第一次上线事故</h4><p>记得刚进公司时第一次提交上线代码，是一个技术改造，某个接口虽然已经使用了缓存(redis)，但因为业务较为复杂导致接口速度还是比较慢，最后考虑使用 local-cache 方案替换原有方案。但因为没有仔细了解透业务，导致遗漏一个接口没有替换。上线后，匿名首页出现异常，那时候雪球上线管理非常随意，一天可能上线多次。那次时间正好是下班时后七点左右，我正高兴的和妹纸吃着饭… leader 来电说出问题了，代码回滚，导致饭也没有吃好，以至于至今还记忆犹新。</p>
<p>之后业务发展越来越好，用户越来越多，单一项目带来的坑也越来越多。随后开始做项目拆分、RPC 改造。别扭着从零开始写 scala ，写到后面越来越顺手。之后换到组合业务、做雪球钱包，全都是 Scala 的项目。</p>
<h4 id="公司搬家">公司搬家</h4><p>15 年初公司顺利搬迁望京 SOHO, 也从一个小公司转变为100人左右的「中小型企业」，从一两个小破屋变成了有茶水间，健身房，餐厅，多个会议室的让人羡慕的工作环境，终于像一个土豪互联网企业了。 </p>
<p>公司是大了，但并没有找到自己独有的商业模式。15年开始各种的尝试，当时组合售卖做的风生水起，大家仿佛看到了希望之光，直到某天一位中年秃顶男子来到我司。之前一直都是只闻 「紫金花」其名，不知其厉害。现在亲身体会了…此处省略八百字。</p>
<p>此路不通后开始转向全力做交易，此前组合业务同事大部分都转到目前我们这个基金业务当中了。小半年后我们的产品终于也即将上市了…尽请期待吧</p>
<p>雪球目前一百多人，我的工号 3x 也算是个老油条，现在已经有很多新员工不认识了~ 经常吃饭感觉到了一个陌生的公司…虽然人越来越多，但雪球还是那个雪球。</p>
<h4 id="总结">总结</h4><p>雪球是个好公司，扁平化的管理，宽松的工作环境，管午饭，有年度旅游和各种小福利。产品有自己的逼格，有特有的创新，「组合」上线后已经被多个竞品模仿抄袭。几乎没有办公室斗争，虽然人数过百，还是保持着创业公司的风范。</p>
<p>当然也有缺点，雪球员工多数个性低调含蓄，从 leader 到员工都如此。整个团队环境是比较内敛的，新员工不容易融入，一些入职不久的新员工因为这个原因也很快就离职了。或许这就是雪球团队特有的一种风格。</p>
<p>当然以上所有都是我个人作为一个普通员工的看法，嘿</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>下午收到封邮件，标题是沉痛哀悼xxxx，差点吓尿… 原来是哀悼之前的项目下线。引发了很多的回忆…<br>两年前加入雪球时写了篇十个字博客，今天就来完成那篇文章吧<br>Snowball 是雪球的「核心」项目（从名字就能看出来），就像歌手出道喜欢发行同名专辑一样。也是因为这个]]>
    </summary>
    
      <category term="雪球" scheme="http://xxxx.ooo/tags/%E9%9B%AA%E7%90%83/"/>
    
      <category term="life" scheme="http://xxxx.ooo/categories/life/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[浅谈 Api 设计]]></title>
    <link href="http://xxxx.ooo/2016/01/27/about-api-design/"/>
    <id>http://xxxx.ooo/2016/01/27/about-api-design/</id>
    <published>2016-01-27T14:15:23.000Z</published>
    <updated>2016-01-27T14:53:34.000Z</updated>
    <content type="html"><![CDATA[<p>之前在团队内做了一次 Api 的规范化，决定采用 RESTful Api 的架构。 并统一了 JSON 结构，约定常用属性、字段的命名方式、URL/HTTP Method 的使用规则。<br>这样的好处不用多说，一个方便易懂，易于使用的 Api 能大大的提高开发效率（做开发的有谁没被第三方 Api 坑过？）  </p>
<h5 id="设计过程">设计过程</h5><p>之前我们有一些设计比较不错的 api 可能是这样的：</p>
<pre><code><span class="regexp">/user/</span>(add<span class="regexp">/get/</span>cancel)?id=<span class="number">123</span>
<span class="regexp">/topic/</span>(create<span class="regexp">/destroy/</span>destroy_batch)?id=<span class="number">123</span> 
</code></pre><p>也算是简单易懂了，那为什么要换成 RESTful 架构？（关于 REST 的特性，设计思想什么的就不说了，网上自取）这样带来最直接的问题就是不统一（规范）。我的 CRUD 叫 add/get/cancel，换一个人可能叫 create/modify/destroy， 甚至可能我的是 adduser 你的是 useradd (瞬间想到了 ubuntu 有木有！)。</p>
<p><strong>规范这东西小范围没什么大问题， 一但队伍庞大了就是个大坑，所以大公司在规范上都是下了大功夫。</strong></p>
<p>HTTP 协议就是一个标准的 REST 实现，RESTful Api 是以 HTTP 协议为强烈依托的，最终我们规范后是这样的：</p>
<pre><code><span class="regexp">/user/</span>{uid} HTTP.GET<span class="regexp">/POST/</span>PUT/DELETE
<span class="regexp">/topic/</span>{tid} HTTP.GET<span class="regexp">/POST/</span>PUT/DELETE
</code></pre><p>暂时只使用这四个方法，使用 PUT 替换 PATCH。很多人对部分情景下 PUT / POST 的使用会有疑问:</p>
<pre><code>解答：根据 HTTP 文档介绍，GET/HEAD/PUT/DELETE 是 Idempotent（重复执行多遍，結果一致）。  
<span class="keyword">POST</span> 每次执行肯定会新增一条记录，大多数情况下可以根据此原则从 <span class="keyword">POST</span>/PUT 中选择合适的动作。  
</code></pre><p>/模块/{id} HTTP.Mehod 这种统一的规范能节省出不少的沟通时间~ 刚开始感觉很美好，当场景多起来之后又出现一些新的问题：<br>有一种功能叫「撤单」，使用 /order/{oid} HTTP.DELETE吗? 那删除订单用什么呢？<br>所以有人开始用 /order/undo/{order_id} HTTP.PUT 类似的方式。按 REST 规范每个 URL 都是一个独立资源，其中不应该包含任何动作。<br>也许应该改成 /order/{oid}?action=undo HTTP.PUT，但这样可能会在同一个接口中引入过多的操作。</p>
<p>类似这样的模糊的场景可能有许多，在 Api 数量随业务庞大的过程中需要反复的对当前 Api 做迭代重构，使它更适合当前的业务场景</p>
<h5 id="那满足以上设计就是_RESTful_Api_吗？">那满足以上设计就是 RESTful Api 吗？</h5><pre><code><span class="string">eg:</span> <span class="regexp">/topic/</span>fav/{tid} HTTP.POST 收藏某个话题
</code></pre><p>这个接口需要从 token 中获取登陆用户信息，且所有的用户都是访问同一个地址。<br>这与 REST 架构中的「无状态」和「唯一资源」的概念冲突。<br>按要求可能是这样的：</p>
<pre><code><span class="regexp">/topic/</span>{uid}<span class="regexp">/fav/</span>{tid} 
</code></pre><p>当然这些都是 REST 的建议，如何做还是要根据具体的业务情况而定</p>
<h5 id="总结下来就是以下几点：">总结下来就是以下几点：</h5><ol>
<li>规范很重要</li>
<li>保持 Api 的优雅是一件持续的重复迭代的工作</li>
<li>不要局限于各种规范中，要在设计规范的时候充分考虑业务上的灵活性</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<p>之前在团队内做了一次 Api 的规范化，决定采用 RESTful Api 的架构。 并统一了 JSON 结构，约定常用属性、字段的命名方式、URL/HTTP Method 的使用规则。<br>这样的好处不用多说，一个方便易懂，易于使用的 Api 能大大的提高开发效率（做开发]]>
    </summary>
    
      <category term="Api" scheme="http://xxxx.ooo/tags/Api/"/>
    
      <category term="程序设计" scheme="http://xxxx.ooo/tags/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="tech" scheme="http://xxxx.ooo/categories/tech/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[巧用 OSX 的 Notification]]></title>
    <link href="http://xxxx.ooo/2015/12/22/try-osx-notification/"/>
    <id>http://xxxx.ooo/2015/12/22/try-osx-notification/</id>
    <published>2015-12-22T05:54:30.000Z</published>
    <updated>2015-12-28T03:59:09.000Z</updated>
    <content type="html"><![CDATA[<p>起因：最近兴起一个 App 叫好近，专做 SOHO 附近小食，每日推出 1 分钱抢购或一些特价下午茶之类的活动，很难抢，不是错过就是被秒抢，遂想出个办法来提高抢购率！</p>
<p>最直接的需求是相对即时通知，让你快人一步。此类工具用 Python 来实现再合适不过了</p>
<h4 id="提醒方式">提醒方式</h4><p>工作期间不能老盯着手机，考虑通过 OSX 的 Notification 实现，让它带着音乐蹦出来~<br>调用 OSX 接口需要依赖 PyObjC 模块，通过 pip 装之（时间比较长，装一堆 OC 相关的包）：</p>
<pre><code>pip <span class="keyword">install</span> PyObjC
</code></pre><p>调用的代码示例（python2.7+适用）:</p>
<pre><code>import objc
import Foundation

<span class="comment">//py2.5可以通过 from Foundation import NSUserNotification 方式引入 </span>
NSUserNotification = objc.<span class="function"><span class="title">lookUpClass</span><span class="params">(<span class="string">'NSUserNotification'</span>)</span></span>
NSUserNotificationCenter = objc.<span class="function"><span class="title">lookUpClass</span><span class="params">(<span class="string">'NSUserNotificationCenter'</span>)</span></span>

def <span class="function"><span class="title">notify</span><span class="params">(title, subtitle, info_text, delay=<span class="number">0</span>, sound=False, userInfo={})</span></span>:
    notification = NSUserNotification.<span class="function"><span class="title">alloc</span><span class="params">()</span></span>.<span class="function"><span class="title">init</span><span class="params">()</span></span>
    notification.<span class="function"><span class="title">setTitle_</span><span class="params">(title)</span></span>
    notification.<span class="function"><span class="title">setSubtitle_</span><span class="params">(subtitle)</span></span>
    notification.<span class="function"><span class="title">setInformativeText_</span><span class="params">(info_text)</span></span>
    notification.<span class="function"><span class="title">setUserInfo_</span><span class="params">(userInfo)</span></span>
    <span class="keyword">if</span> sound:
        notification.<span class="function"><span class="title">setSoundName_</span><span class="params">(<span class="string">"NSUserNotificationDefaultSoundName"</span>)</span></span>
    notification.<span class="function"><span class="title">setDeliveryDate_</span><span class="params">(Foundation.NSDate.dateWithTimeInterval_sinceDate_(delay, Foundation.NSDate.date()</span></span>))
    NSUserNotificationCenter.<span class="function"><span class="title">defaultUserNotificationCenter</span><span class="params">()</span></span>.<span class="function"><span class="title">scheduleNotification_</span><span class="params">(notification)</span></span>
</code></pre><h4 id="截获相关_Api">截获相关 Api</h4><p>利用 Charles 可以很方便的抓取，经观察一些优惠信息只有移动端才有，构造相应的 headers，使用 requests 模块（pip 装之）:</p>
<pre><code><span class="function"><span class="keyword">def</span> <span class="title">queryNotification</span><span class="params">()</span>:</span>
    url = <span class="string">"http://api.haojin.in/takeout_item_list?atag_id=0&amp;offset=0&amp;pagesize=10&amp;region_id=55b9c9d4c69575999049b2b4"</span>
    headers = {<span class="string">'content-type'</span>: <span class="string">'application/json'</span>, <span class="string">'User-Agent'</span>:<span class="string">'User-Agent: QMMWD/1.3.6 iPhone/9.1 AFNetwork/1.1'</span>}
    req = requests.get(url, headers=headers)
    content = json.loads(req.content)
    items = content[<span class="string">'data'</span>][<span class="string">'sale_items'</span>]
    <span class="keyword">for</span> item <span class="keyword">in</span> items:
        price = item[<span class="string">'price'</span>]
        title = item[<span class="string">'title'</span>]
        origin_price = item[<span class="string">'origin_price'</span>]
        end_time = item[<span class="string">'end_time'</span>]
        quantity = item[<span class="string">'quantity'</span>]
        e = datetime.datetime.strptime(end_time, <span class="string">"%Y-%m-%d %H:%M:%S"</span>)
        <span class="keyword">if</span> float(price) &lt; <span class="number">2</span> <span class="keyword">and</span> e &gt; datetime.datetime.now() <span class="keyword">and</span> quantity &gt; <span class="number">0</span>:
            notify(<span class="string">u"特价提醒!!"</span>, title, <span class="string">u"原价"</span>+origin_price+<span class="string">u",现价:"</span>+price, sound=<span class="keyword">True</span>)

<span class="keyword">if</span> __name__==<span class="string">'__main__'</span>:
    <span class="keyword">while</span> <span class="keyword">True</span>:
        queryHomeNotification()
        time.sleep(<span class="number">30</span>)
</code></pre><p>每 30 秒查询一次，没结束的活动中价格低于 2 元且还有库存的优惠信息，一共不到 50 行代码，运行成功。但看起来使用方式并不友好，没办法分享给小伙伴们呢。</p>
<h4 id="打包">打包</h4><p>想到把代码包装成一个 OSX 的应用，这样就方便任何人用了。使用 py2app 打包（pip 装之）：</p>
<ol>
<li><p>新建 setup.py，可以自定义 icon(icns 格式）</p>
<pre><code><span class="keyword">from</span> setuptools <span class="keyword">import</span> setup

APP = [<span class="string">'nearRemind.py'</span>]
APP_NAME = <span class="string">"NearRemind"</span>
DATA_FILES = []
<span class="keyword">OPTIONS</span> = {<span class="string">'argv_emulation'</span>: <span class="keyword">True</span>, <span class="string">'iconfile'</span>: <span class="string">'ico.icns'</span>}

setup(
    name=APP_NAME,
    app=APP,
    data_files=DATA_FILES,
    <span class="keyword">options</span>={<span class="string">'py2app'</span>: <span class="keyword">OPTIONS</span>},
    setup_requires=[<span class="string">'py2app'</span>],
</code></pre></li>
<li><p>打包，默认当前路径下 dist 目录：</p>
<pre><code>Python setup<span class="class">.py</span> py2app
</code></pre></li>
</ol>
<p>可以分享给小伙伴啦，启动就好，效果如下：<br><img src="http://7xn47h.com1.z0.glb.clouddn.com/2015/12/1450763021570.png" alt="notification"></p>
<h4 id="其他">其他</h4><p>虽然有了提示但还是未必能抢到，所以后面还给自己做了自动下单版本，因为需要 session_id 和 sid 及收货地址之类的个人信息，做公用版比较麻烦些，就当是自己的私人福利了~<br>有兴趣自己玩的话代码在 <a href="https://github.com/zhourongyu/NearNotification" target="_blank" rel="external">Github</a> </p>
<p>如此简易的 App 缺陷有很多，例如启动后没有合理的关闭方式，只能右键强制退出；无限重复通知等。</p>
<p>顺便发现「好近」的一些问题：</p>
<ul>
<li>接口访问频率似乎没有限制</li>
<li>重复下单（一秒十单没问题~再快也没试了）</li>
<li>活动状态好像是根据手机当前时间与接口里 end_time 对比来判断活动是否结束，且所有时间格式如下 “end_time”: “2015-12-21 23:59:00”，这种实现貌似不够好</li>
</ul>
<p>Notification 刚移植到 OSX 上时就觉得这东西可以有很多种玩法，比如自己实现类似番茄工作法这样的小工具，这次也算试水成功了</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>起因：最近兴起一个 App 叫好近，专做 SOHO 附近小食，每日推出 1 分钱抢购或一些特价下午茶之类的活动，很难抢，不是错过就是被秒抢，遂想出个办法来提高抢购率！</p>
<p>最直接的需求是相对即时通知，让你快人一步。此类工具用 Python 来实现再合适不过了</p]]>
    </summary>
    
      <category term="osx" scheme="http://xxxx.ooo/tags/osx/"/>
    
      <category term="python" scheme="http://xxxx.ooo/tags/python/"/>
    
      <category term="tech" scheme="http://xxxx.ooo/categories/tech/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Parallels Desktop 黑五购置指南]]></title>
    <link href="http://xxxx.ooo/2015/11/26/parallels_desktop_%E9%BB%91%E4%BA%94%E8%B4%AD%E7%BD%AE%E6%8C%87%E5%8D%97/"/>
    <id>http://xxxx.ooo/2015/11/26/parallels_desktop_黑五购置指南/</id>
    <published>2015-11-26T04:48:40.000Z</published>
    <updated>2015-11-30T09:25:28.000Z</updated>
    <content type="html"><![CDATA[<p>Parallels Desktop 是 Mac 端最好用的虚拟机，没有之一，这个不多说了。虽然它的定价一直很坑爹，每年升级「骗钱」，双十一也参加打折但也很贵，但这次黑五新出的 Bundle 非常值</p>
<p><img src="http://7xn47h.com1.z0.glb.clouddn.com/2015/11/1448509187294.png" alt="bundle"></p>
<p>因为这次 Bundle 里所有的 App 都相当的不错  </p>
<ul>
<li>1Password ($49.9) 打折时大概也要200+</li>
<li>Evernote Preminum ($49.9/y)</li>
<li>Poket Premium (原价$49.9/y)</li>
</ul>
<p>含这几个已经很超值啦。其他的虽然没用过，看评价也都算是大作，留作备用也不错。<br>我是 PD10 用户，所以需要的是 Parallels Desktop for Mac Pro Edition Upgrade (1 Year)</p>
<h3 id="重点来了！">重点来了！</h3><p>虽然性价比高，但 358 的价格还是让人有点犹豫， 那么通过以下操作让价格飞起来吧。</p>
<ol>
<li>找一个日本的 VPN， 通过日本 IP 进入网站</li>
<li>Upgrade Now 进入订单页，你会发现价格变为 ￥5300 <img src="http://7xn47h.com1.z0.glb.clouddn.com/2015/11/1448509187456.png" alt="jp"></li>
<li>右上角 Currency 切换回 Chinese Yuan，地址选为 China</li>
</ol>
<p>你会惊喜的发现价格变为了 ￥216.61，还可以用支付宝支付！有木有感觉不买不行的感觉？</p>
<p><img src="http://7xn47h.com1.z0.glb.clouddn.com/2015/11/1448509187681.png" alt="cn"></p>
<p><strong>PS</strong>: 1Password 我已经买过，￥100 转出去了，还有自己用不着的都可以转给其他朋友</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Parallels Desktop 是 Mac 端最好用的虚拟机，没有之一，这个不多说了。虽然它的定价一直很坑爹，每年升级「骗钱」，双十一也参加打折但也很贵，但这次黑五新出的 Bundle 非常值</p>
<p><img src="http://7xn47h.com1.z0]]>
    </summary>
    
      <category term="Parallels Desktop" scheme="http://xxxx.ooo/tags/Parallels-Desktop/"/>
    
      <category term="黑五" scheme="http://xxxx.ooo/tags/%E9%BB%91%E4%BA%94/"/>
    
      <category term="life" scheme="http://xxxx.ooo/categories/life/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[草原天路]]></title>
    <link href="http://xxxx.ooo/2015/10/06/%E8%8D%89%E5%8E%9F%E5%A4%A9%E8%B7%AF/"/>
    <id>http://xxxx.ooo/2015/10/06/草原天路/</id>
    <published>2015-10-06T14:01:30.000Z</published>
    <updated>2015-10-06T15:45:07.000Z</updated>
    <content type="html"><![CDATA[<h4 id="简介">简介</h4><p>「天路」是京郊最美风景之一，东西横跨沽源、崇礼、张北等地儿， 故游玩路线也是双向。<br>最佳游玩时间是六七月份，绿草茵茵，在广阔的大草原上吹吹风，骑骑马，好生惬意。<br>这样一条普通的公路在内蒙随处可见。在北京附近的它却要准备开发成景区收费了，真是坑爹。</p>
<h4 id="北京自驾游方案">北京自驾游方案</h4><p><code>不靠谱方案：周末大清早六七点钟出发，因为节假日八达岭高速太堵，估计中午才能到，开一上午车已经非常累了，况且到达天路还要继续堵（正是景区高峰期）</code><br>建议方案：下午从北京出发到崇礼/张北住宿，第二天一早出发。我俩次都是住在崇礼，从桦皮岭进入天路自东向西游玩，这样人相对少很多，悠然自得。</p>
<p>住宿可以选择张北县城内或者沿途的农家乐，因为景区化的原因，沿途当地人自办的农家乐都被勒令拆除，日后大概只有正规运营的场所了<br>另一个方案是露营，沿途不少适合的点，这次我背着帐篷准备来尝试一下，夜间非常冷，一定要做好防寒措施。 六七月应该好很多</p>
<p><img src="http://7xn47h.com1.z0.glb.clouddn.com/2015/10/1444138612276.jpg" alt="随处可见的风车"></p>
<p><img src="http://7xn47h.com1.z0.glb.clouddn.com/2015/10/1444138612174.jpg" alt="满屏幕都是风车"></p>
<p>一个好的天气很重要，虽然在北京这很难得~<br><img src="http://7xn47h.com1.z0.glb.clouddn.com/2015/10/1444138612371.jpg" alt="草原上休息的马儿们"></p>
<p>在草原上住的好处就是可以看看日落/日出/星星，玩摄影的自然不能错过。但是夜间太冷，加上当日月亮非常的亮，导致本次星星没拍上~ 囧！<br><img src="http://7xn47h.com1.z0.glb.clouddn.com/2015/10/1444138612650.jpg" alt="日落夕阳"></p>
]]></content>
    <summary type="html">
    <![CDATA[<h4 id="简介">简介</h4><p>「天路」是京郊最美风景之一，东西横跨沽源、崇礼、张北等地儿， 故游玩路线也是双向。<br>最佳游玩时间是六七月份，绿草茵茵，在广阔的大草原上吹吹风，骑骑马，好生惬意。<br>这样一条普通的公路在内蒙随处可见。在北京附近的它却要准备开发成]]>
    </summary>
    
      <category term="摄影" scheme="http://xxxx.ooo/tags/%E6%91%84%E5%BD%B1/"/>
    
      <category term="京郊" scheme="http://xxxx.ooo/tags/%E4%BA%AC%E9%83%8A/"/>
    
      <category term="life" scheme="http://xxxx.ooo/categories/life/"/>
    
  </entry>
  
</feed>